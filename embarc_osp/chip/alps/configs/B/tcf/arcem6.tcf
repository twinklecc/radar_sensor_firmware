<?xml version="1.0" encoding="UTF-8"?>
<config_list>
  <tool_config version="1.0.72" mwdt_version="M-2016.12" />
  <configuration name="BCRs" filename="bcr_contents.txt">
    <string><![CDATA[
	0x4	0x44		IDENTITY
	0x18	0xa00000	AUX_DCCM
	0x60	0x2		BCR_VER
	0x68	0x10		VECBASE_AC_BUILD
	0x6d	0x1002		MPU_BUILD
	0x6e	0x102		RF_BUILD
	0x72	0x4216104	D_CACHE_BUILD
	0x74	0x704		DCCM_BUILD
	0x75	0x10704		TIMER_BUILD
	0x77	0x26104		I_CACHE_BUILD
	0x78	0x704		ICCM_BUILD
	0x7b	0x20506		MULTIPLY_BUILD
	0x7c	0x3		SWAP_BUILD
	0x7d	0x3		NORM_BUILD
	0x7e	0x2		MINMAX_BUILD
	0x7f	0x303		BARREL_BUILD
	0xc1	0x12027202	ISA_CONFIG
	0xc7	0x40049204	ERP_BUILD
	0xc8	0x1004f03	FPU_BUILD
	0xf1	0x101		CORE_CONFIG
	0xf3	0x16d7001	IRQ_BUILD
	0x208	0x100000	AUX_ICCM
]]></string>
  </configuration>
  <configuration name="build_version_info" filename="build_version_info.txt">
    <string><![CDATA[
Version Information:
    ARChitect O-2018.09
    IP Libraries:
        ARCv2EM            v5.0.32
        ARC Debug          v2.1.9
        ARC RTT            v2.0.37
        ARC xCAM           v4.3.7
        ARConnect          v2.1.18
        ARCv2_FPGA_RDF     v1.4.7
        ARCv2EM_CCT        v5.0.32
        ARCv2MSS           v2.2.9
        Implementation     v5.0.32
        Synopsys Based Reference Design Flow  v9.0.22
        Synopsys Clock Gate Replacement Flow  v3.0.7
        Synopsys Embed-it Integrator Flow  v7.0.16
        Synopsys SMS Integrator Flow  v2.0.10
        Tool Configuration  v1.0.72
]]></string>
  </configuration>
  <configuration name="mw_compiler" filename="ccac.arg">
    <string><![CDATA[
	-arcv2em
	-core3
	-HL
	-Hpc_width=24
	-Xcode_density
	-Xdiv_rem=radix2
	-Xswap
	-Xbitscan
	-Xmpy_option=wlh2
	-Xshift_assist
	-Xbarrel_shifter
	-Xfpus_div
	-Xfpu_mac
	-Xfpuda
	-Xfpus_mpy_slow
	-Xfpus_div_slow
	-Xtimer0
	-Xtimer1
	-Xrtc
	-Hccm
]]></string>
  </configuration>
  <configuration name="mw_debugger" filename="mdb.arg">
    <string><![CDATA[
	-arcv2em 
	-core3 
	-rgf_num_banks=1 
	-rgf_num_wr_ports=2 
	-pc_width=24 
	-addr_size=24 
	-Xcode_density 
	-Xdiv_rem=radix2 
	-turbo_boost 
	-Xswap 
	-Xbitscan 
	-Xmpy_option=wlh2 
	-Xshift_assist 
	-Xbarrel_shifter 
	-Xfpus_div 
	-Xfpu_mac 
	-Xfpuda 
	-Xfpus_mpy_slow 
	-Xfpus_div_slow 
	-Xtimer0 
	-Xtimer0_level=1 
	-Xtimer1 
	-Xtimer1_level=0 
	-Xrtc 
	-mpu 
	-mpu_regions=16 
	-interrupts=112 
	-interrupt_priorities=2 
	-ext_interrupts=109 
	-interrupt_base=0x0 
	-dcache=32768,32,2,a 
	-dcache_feature=2 
	-dcache_uncached_region 
	-icache=32768,32,2,a 
	-icache_feature=0 
	-dccm_size=0x8000 
	-dccm_base=0x00a00000 
	-iccm0_size=0x8000 
	-iccm0_base=0x00100000 
	-error_prot_ver=4 
	-iccm0_prot=ecc 
	-iccm0_prot_level=data_addr 
	-dccm_prot=ecc 
	-dccm_prot_level=data_addr 
	-ic_prot=ecc 
	-ic_prot_level=data_addr 
	-dc_prot=ecc 
	-dc_prot_level=data_addr 
	-watchdog 
	-watchdog_size=32 
]]></string>
  </configuration>
  <configuration name="nSIM" filename="nsim.props">
    <string><![CDATA[
	nsim_isa_family=av2em
	nsim_isa_core=3
	arcver=0x43
	nsim_isa_rgf_num_banks=1
	nsim_isa_rgf_num_regs=32
	nsim_isa_rgf_num_wr_ports=2
	nsim_isa_big_endian=0
	nsim_isa_lpc_size=32
	nsim_isa_pc_size=24
	nsim_isa_addr_size=24
	nsim_isa_code_density_option=2
	nsim_isa_div_rem_option=1
	nsim_isa_turbo_boost=1
	nsim_isa_swap_option=1
	nsim_isa_bitscan_option=1
	nsim_isa_mpy_option=3
	nsim_isa_shift_option=3
	nsim_isa_fpus_div_option=1
	nsim_isa_fpu_mac_option=1
	nsim_isa_fpuda_option=1
	nsim_isa_fpu_fast_mpy_option=0
	nsim_isa_fpu_fast_div_option=0
	nsim_isa_enable_timer_0=1
	nsim_isa_timer_0_int_level=1
	nsim_isa_enable_timer_1=1
	nsim_isa_timer_1_int_level=0
	nsim_isa_rtc_option=1
	mpu_regions=16
	mpu_version=2
	nsim_isa_number_of_interrupts=112
	nsim_isa_number_of_levels=2
	nsim_isa_number_of_external_interrupts=109
	nsim_isa_intvbase_preset=0x0
	dcache=32768,32,2,a
	nsim_isa_dc_feature_level=2
	nsim_isa_dc_uncached_region=1
	icache=32768,32,2,a
	nsim_isa_ic_feature_level=0
	dccm_size=0x8000
	dccm_base=0x00a00000
	iccm0_size=0x8000
	iccm0_base=0x00100000
	nsim_isa_error_prot=4
	nsim_isa_error_prot_iccm0=2
	nsim_isa_error_prot_dccm=2
	nsim_isa_error_prot_icache=2
	nsim_isa_error_prot_dcache=2
	nsim_isa_watchdog=1
	nsim_isa_watchdog_size=32
]]></string>
  </configuration>
  <configuration name="IDE" filename="ide.props">
    <string><![CDATA[
	processor.family=4
	processor.core_version=3
	processor.family_name=arcv2em
	processor.rgf_num_banks=1
	processor.rgf_num_wr_ports=2
	processor.endian=little
	processor.lpc_size=32
	processor.pc_size=24
	processor.addr_size=24
	processor.Xcode_density=1
	processor.Xdiv_rem=radix2
	processor.turbo_boost=1
	processor.Xswap=1
	processor.Xbitscan=1
	processor.Xmpy_option=wlh2
	processor.Xshift_assist=1
	processor.Xbarrel_shifter=1
	processor.Xfpus_div=1
	processor.Xfpu_mac=1
	processor.Xfpuda=1
	processor.Xfpus_mpy_slow=1
	processor.Xfpus_div_slow=1
	processor.Xtimer0=1
	processor.Xtimer0_level=1
	processor.Xtimer1=1
	processor.Xtimer1_level=0
	processor.Xrtc=1
	processor.mpu=1
	processor.mpu.regions=16
	processor.interrupts=112
	processor.interrupt_priorities=2
	processor.ext_interrupts=109
	processor.interrupt_base=0x0
	processor.dcache.size=32768
	processor.dcache.line_size=32
	processor.dcache.ways=2
	processor.dcache_feature=2
	processor.dcache_uncached_region=1
	processor.icache.size=32768
	processor.icache.line_size=32
	processor.icache.ways=2
	processor.icache_feature=0
	processor.dccm_size=0x8000
	processor.dccm_base=0x00a00000
	processor.Hccm=1
	processor.iccm0_size=0x8000
	processor.iccm0_base=0x00100000
	processor.error_prot_ver=4
	processor.iccm0_prot=ecc
	processor.iccm0_prot_level=data_addr
	processor.dccm_prot=ecc
	processor.dccm_prot_level=data_addr
	processor.ic_prot=ecc
	processor.ic_prot_level=data_addr
	processor.dc_prot=ecc
	processor.dc_prot_level=data_addr
	processor.watchdog=1
	processor.watchdog_size=32
]]></string>
  </configuration>
  <configuration name="architect" filename="build_configuration.txt">
    <string><![CDATA[
######## cpu_fpu_20181109 --- com.arc.templates.project.Empty.1_0 ########

# BuildHTMLDocs --- Creates custom HTML documentation in the 'docs' directory.
-build_html_docs false

# BuildSoftware --- Creates software under the Software directory.
-build_software false

# BuildTestCode --- Creates test source code under the 'tests' directory.
-build_test_code false

# BuildScripts --- Creates synthesis scripts and configuration files, which are required for hierarchy generation.
-build_scripts true

# BuildHDL --- Creates the behavioural and synthesisable HDL source code.
-build_hdl true

# CompileTestCode --- Compiles and assembles the test code.
-compile_test_code false

# GenerateStructuralHDL --- Generate the necessary structural HDL
-generate_structural_hdl false

# CompileForHDLSimulation --- Compile the HDL ready for simulation, using the selected Simulator.
-compile_hdl_for_simulation false

# BuildXCAM --- 
# When true, build the XCAM cycle accurate model from HDL.
# This happens only when the VTOC component (in the XCAM library) has been added to the design.
# 
-build_xcam false

# RunARCsyn --- Synthesize design using ARCsyn
-run_arcsyn false

# RunSEIF --- Run Synopsys Embedit Integrator Flow to generate configured memory instances
-run_seif false

# RunARCrams --- Run ARCrams on the current build, this will stitch in vendor supplied RAM models and update the synthesis and simulation environment to use the models.
-run_arcrams false

# RunARCformal --- Formal Verification using ARCformal
-run_arcformal false

# RunARCpower --- Run the Power Analysis using RTL simulation to derive the activity
-run_arcpower false

# compile_nsim_user_extensions --- Build nSIM extensions for any APEX components in the current design using their C Models.
-compile_nsim_user_extension false

# compile_translated_nsim_extensions --- Converts APEX extensions from Verilog to C++ and compiles the model for nSIM.
-compile_translated_nsim_extensions false


######## System --- com.arc.hardware.System.1_0 ########

# Create System
-create com.arc.hardware.System.1_0 System

# Testbench --- 
# Only the rascal testbench is supported, and is required by ARCtest.
# 	
-testbench rascal

# SynthesisLevel --- 
# Sets the top level module name for synthesis.  
# 
# If not using core_sys: for single-core designs, cpu_isle is used; for multicore designs, archipelago is used.
# 	
-synthesislevel cpu_isle/archipelago

# GateLevelSim --- When selected the gate level sim test code and scripts would be installed to run ARCgatesim
-gatesim true

# UserLibraryName --- The name for your HDL library
-library_name user

# OPTION_SimulatorName --- The name of the simulator you wish to use
-simulator nc

# sim64 --- When selected, the 64-bit version of the simulator is used.  Be sure you have the 64-bit-capable simulator installed  and $ARCHITECT_ROOT/lib/linux_x86_64/ added to your LD_LIBRARY_PATH.
# The setting of this option affects the content of the generated makefile_interface_*_verilog, where * is the simulator name.
-sim64 false

# verilog_2001 --- Enable Verilog 2001 file-io syntax (if false: use pli)
-verilog_2001 true

# export_srams_to --- Where to place srams, if not cpu_top
-export_srams_to none

# copy_prefix --- 
# A Copy Prefix P causes creation of a separate copy of the entire Verilog build where each Verilog filename, module, and `define is prefixed with P and copied to a separate directory named P.
# 	
-copy_prefix ""


######## ARCv2EM CCT --- cct.1_0 ########

# Create ARCv2EM CCT
-create cct.1_0 "System.ARCv2EM CCT"

# cct --- 
# 	Option used to add a CCT to the design for command-line builds
# 	Without this architect can't add this component to a build
# 	via a cmdline -create command.  
# 	with old scripts.
# 	
-cct true

# no_hostlink --- 
# This prevents the inclusion of the hostlink library when compiling
# C or C++ programs.  The resultant executable, if it contains printfs,
# will print to an internal fixed buffer __mwwrite_buf.  
# Other hostlink operations that require debugger assistance, such as file
# opens, will fail.
# 
# Hostlink references incur memory cycles at unpredictable times and 
# so can perturb cycle-timing results.  Without hostlink,
# the debugger will not in any way interfere with the target while it is running.  
# Therefore this option is useful for simulation in which you want precisely the
# same cycle timing to occur each time you run, or for accurate power consumption results.
# 	
-cct_no_hostlink false


######## BusFabric --- com.arc.hardware.ARCv2MSS.BusFabric.1_0 ########

# Create BusFabric
-create com.arc.hardware.ARCv2MSS.BusFabric.1_0 System.BusFabric

# alb_mss_fab_def_div2ref --- This specifies the clock division factor at reset. It is used for mss clock controller to generate mss fabric clock, and the value N means mss fabric is running at (1/N) x ref_clk.
-alb_mss_fab_def_div2ref 1

# alb_mss_fab_lat --- This specifies the maximum latency in the master latency units.
-alb_mss_fab_lat 0

# alb_mss_fab_def_lat --- This specifies the latency after reset for the master latency units.
-alb_mss_fab_def_lat 0

# alb_mss_fab_def_wr_bw --- This specifies the write channel bandwidth parameter after reset for the master bandwidth control units.
-alb_mss_fab_def_wr_bw 0

# alb_mss_fab_def_rd_bw --- This specifies the read channel bandwidth parameter after reset for the master bandwidth control units.
-alb_mss_fab_def_rd_bw 0

# alb_mss_ccm_base --- This specifies the base address at which the ICCM and DCCM DMIs will be placed in the memory map. The address should be divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_ccm_base 0x4_0000


######## CPUisle --- com.arc.hardware.CPU_isle.1_0 ########

# Create CPUisle
-create com.arc.hardware.CPU_isle.1_0 System.CPUisle

# unique_name --- verilog module modifier prefix
-unique_name ""

# ArcNum --- The processor number as read back in the ARCNUM field of the IDENTITY register.
-arc_num 0

# instances --- 
# The number of instantiations of this core.
# 
-instances 1

# CPUFloorplan --- Floorplan giving relative placement of the RAMs  for the given configuration of ARCv2HS or ARCv2EM in this CPUisle
-cpu_floorplan none

# userCPUFloorplanPath --- Pathname of user floorplan for the CPU when using a hierarchical implementation
-usercpufloorplan_path ""

# pinLocationConstraintsFile --- Pathname+filename of the physical pin location constraints file or just "side1" (all pins on l.h.s) or "side2" (pins on top only) or "side3" (pins on r.h.s. only) or "side4" (pins on bottom only) to get a template file generated
-pin_location_constraints_file ""


######## ARCv2EM --- com.arc.hardware.ARCv2EM.1_0 ########

# Create ARCv2EM
-create com.arc.hardware.ARCv2EM.1_0 System.CPUisle.ARCv2EM

# arcv2em --- Description to follow
-arcv2em true

# def_div2ref --- This specifies the clock division factor at reset. It is used for mss clock controller to generate core clock, and the value N means core is running at (1/N) x ref_clk.
-def_div2ref 1

# addr_size --- This defines the address bus width (in bits).
-addr_size 24

# pc_size --- This defines the program counter (in bits).
-pc_size 24

# lpc_size --- This defines the size of the loop counter (in bits).
-lpc_size 32

# halt_on_reset --- This defines whether the core is halted initially on reset.
-halt_on_reset true

# byte_order --- This defines the endianness of the core.
-byte_order little

# sep_option --- Enable PC/RF and other key register protection for SEP.
-sep_option false

# code_density_option --- This reduces the size of program memory by adding instructions that condense commonly used instruction patterns with some marginal increase in processor gate count. The added instructions are ENTER_S, LEAVE_S, JLI_S, BI, BIH.
-code_density_option true

# bitscan_option --- This adds instructions for efficient search of bits within a 32 bit word, including normalize (NORM, NORMH, NORMW) and find first or last set bit (FFS, FLS) instructions.
-bitscan_option true

# shift_option --- The Shift ISA option adds variable and multi-length shift rotation instructions:  (0) No shift/rotation instructions (1) ASR16, ASR8, LSR8, LSL8, ROL8, ROR8 (2) ASRM, ASLM, LSRM, RORM (3) ASR16, ASR8, LSR8, LSL8, ROL8, ROR8, ASRM, ASLM, LSRM, RORM
-shift_option 3

# swap_option --- This adds two instructions used to swap half-words or bytes in a 32b word. Useful for converting between little to big endianess and vice-versa.
-swap_option true

# div_rem_option --- The DIV/REM option adds non-blocking multi-cycle implementation of integer divide/remainder functions. Added instructions are DIV, DIVU (integer divide), REM and REMU (integer divide remainder).radix2 takes 33 cycles.  radix4_enhanced takes 3 to 19 cycles per operation.
-div_rem_option radix2

# mpy_option --- The Multiplier ISA option allows selection between several multiplier configurations to tradeoff performance with silicon area.
# For select multiply options, when the DIV/REM option is also selected, some datapath resources will be shared between the multiply and divide pipeline to minimize total area.
# 
# Cycle count (16-bit, lower 32-bit or upper 32-bit) for the different configurations is as follows:
# <pre>
# 
# option  16/L32/U32  Instructions
# ------  ----------  ---------------------
#       
# none	  -/-/-     None
# wlh1	  1/1/1     MPYW/U, MPY/U, MPYH/U
# wlh2	  2/2/2     MPYW/U, MPY/U, MPYH/U
# wlh3	  2/3/3     MPYW/U, MPY/U, MPYH/U
# wlh4	  2/4/5     MPYW/U, MPY/U, MPYH/U
# wlh5	  5/9/9     MPYW/U, MPY/U, MPYH/U
# </pre>
# 
-mpy_option wlh2

# code_protection --- The ARC EM architecture divides the memory into 16 regions, which can be protected individually.  This feature adds a 16-bit input to the processor core, one bit per region. When the protect bit is set, the processor disables any load or store to the corresponding region.  An attempt to access a protected region raises an EV_ProtV exception.
-code_protection false

# stack_checking --- Stack checking is a mechanism for checking stack accesses and raising an exception when a stack overflow or underflow is detected.
-stack_checking false

# unaligned_option --- This enables unaligned loads and stores.
-unaligned_option false

# intvbase_preset --- This sets the interrupt vector base configuration register, VECBASE_AC_BUILD. The vector base address is aligned to a 1KB boundary, so the required address value should be divided by 1K (i.e. do not include the lower 10 bits). On reset, this register is loaded into the interrupt vector base address register, INT_VECTOR_BASE.
-intvbase_preset 0x0

# intvbase_preset_s --- This sets the secure interrupt vector base configuration register, VECBASE_AC_BUILD. The vector base address is aligned to a 1KB boundary, so the required address value should be divided by 1K (i.e. do not include the lower 10 bits). On reset, this register is loaded into the interrupt vector base address register, INT_VECTOR_BASE_S.This is effective only when 2+2 mode is enabled.
-intvbase_preset_s 0x0

# intvbase_ext --- Set this option to drive the upper 22 bits of the interrupt base vector externally, into signal intvbase_in.
-intvbase_ext false

# nmi_option --- add Non-maskable external exception support
-nmi_option false

# rgf_impl --- This defines whether the register file is implemented using flip-flops, or with a hard macro.
-rgf_impl flip_flops

# rgf_num_regs --- This defines the size (in 32b register) of the processor register file.
-rgf_num_regs 32

# rgf_wr_ports --- This defines the number of write ports on the register file.
-rgf_wr_ports 2

# rgf_num_banks --- Dual register banks are useful if Fast IRQ has been configured, but may be selected even if not.
-rgf_num_banks 1

# rgf_banked_regs --- This selects the number of registers that are replicated in the second register-file bank.
-rgf_banked_regs 32

# turbo_boost --- This enables the Turbo Boost synthesis option. By enabling this option, the achievable clock frequency is increased, but at the cost of an additional cycle latency on branch instructions.
-turbo_boost true

# infer_alu_adder --- infer: datapath is described as behavioral code: A + B
# instantiate: datapath is instantiated as a detailed multi-stage code of a carry-lookahead adder.  It is generally preferable to use the infer option and add directives for your target synthesizer. 
-infer_alu_adder infer

# infer_mpy_wtree --- infer: datapath is described as behavioral code: A * B (applies to only wlh3, wlh4 and wlh5 designs)
# instantiate: datapath is instantiated as a detailed multi-stage code of a Wallace Tree multiplier It is generally preferable to use the infer option and add directives for your target synthesizer. 
-infer_mpy_wtree instantiate

# scantest_ram_bypass_mux --- This mux is used to make logic trapped between flops and memory (aka shadow logic) to be covered by scantest without requiring advanced sequential ATPG on the memory to be applied. Will add delay to functional access time
-scantest_ram_bypass_mux false

# logic_bist --- This option will OR LBIST_EN with test_mode
-logic_bist false

# power_domains --- Adds three separate power domains to the core, and propagates power-gate control signals to the top level of the core. Also generates UPF constraints and commands in the low-power scripts
-power_domains false

# dvfs --- Adds logic to the core to allow dynamic controlling of voltage and frequency and propagates the associated control signals to the top level of core
-dvfs false

# mem_bus_option --- The core supports two bus protocols for accessing external memory: AHB & AHB-Lite. AHB-Lite-single means instruction fetch and data access share a single AHB-Lite port. AHB-Lite-dual means separate AHB-Lite port for each initiator if present.
-mem_bus_option AHB-Lite-dual

# mem_bus_reg_interface --- Specifies whether the memory bus interface is registered.
-mem_bus_reg_interface true

# dmi_burst_option --- This will enable high-throughput burst support on the DMI slave interfaces. By enabling this option, the peak DMI read throughput goes from 1 word per 3 cycles to N words per N+2 cycles, in which N is the AHB burst lengthDMI write throughput goes from 1 word per 3 cycles to 1 word per cycle.
-dmi_burst_option false

# has_dmp_peripheral --- This option enables the redirection of load/store accesses to one segment (1/16) of the addressable space to a dedicated peripheral bus. This offers high system integration and reduces overall system cost.
-has_dmp_peripheral false

# per0_base --- This option specifies the memory region assignment for this peripheral aperture
-per0_base 15

# per0_limit --- This option specifies the end of this peripheral aperture
-per0_limit 0

# per_bus_option --- The core supports one bus protocol for accessing the peripheral space, when enabled: AHB-Lite.
-per_bus_option AHB-Lite

# per_bus_reg_interface --- Specifies whether the peripheral bus interface is registered.
-per_bus_reg_interface false

# clock_gating --- This enables the insertion of architectural clock gate elements in the design. By enabling this option, the clocks to various parts of the design will be disabled when the logic they drive is not in use to save power.
-clock_gating true

# back_compat --- This enables the addition of rst_a input in the clkgate module to support backward compatibility with the older EM and Subsystem releases.
-back_compat false

# byte_parity --- If parity protection on the CCMs or Cache is configured, this option enables parity protection on a per-byte basis. Otherwise, parity is per word basis
-byte_parity false

# prot_pipelined --- Check the box if CCM memories are configured for ECC, and you want single-bit errors to be corrected, written back to memory, and re-fetched. When unchecked, single bit errors are corrected when read from memory, but the offending memory location itself is not corrected with a writeback, no influence on Cache protection
-prot_pipelined true

# cct_test_ena --- When ECC is configured, this option enables single bit error injection in CCT RAM models to demonstrate ECC protection on the RAMs. When enabled, the RAM models can only be used in HDL CCT simulation (no xCAM support) and are not intended for use in SoC level integration.
-cct_test_ena false

# err_prot_ehce --- Enabled enhanced ECC architecture for CCM. Instruction fetch with single bit error is not replayed; ecc cac modules are shared to reduce area and timing opt.
-err_prot_ehce true


######## DCCM --- com.arc.hardware.DCCM.1_0 ########

# Create DCCM
-create com.arc.hardware.DCCM.1_0 System.CPUisle.ARCv2EM.DCCM

# dccm_size --- This defines the size of the Data Closely Coupled Memory (DCCM) in bytes
-dccm_size 32768

# dccm_base --- Sets the initial memory region assignment for DCCM
-dccm_base 10

# dccm_interleave --- Split DCCM into even/odd memory banks.
-dccm_interleave false

# dccm_prot --- Specifies the type of protection built for the DCCM.
-dccm_prot ECC

# dccm_prot_level --- Specifies the level protection.
-dccm_prot_level Data_Addr

# dccm_prot_exceptions --- When the core is configured with ECC or Parity, cause exception generation hardware to be created for uncorrectable errors detected on the DCCM
-dccm_prot_exceptions true

# dccm_sec_lvl --- Specifies the level of secure DCCM.
-dccm_sec_lvl Non_Secure

# dccm_dmi --- This enables external access through a DMI (direct memory interface) port.
-dccm_dmi false


######## Data Cache --- com.arc.hardware.Data_Cache.1_0 ########

# Create Data Cache
-create com.arc.hardware.Data_Cache.1_0 "System.CPUisle.ARCv2EM.Data Cache"

# dc_size --- This defines the total size of the Data Cache in bytes.
-dc_size 32768

# dc_ways --- This defines the number of cache ways.
-dc_ways 2

# dc_bsize --- This defines the cache line length in bytes.
-dc_bsize 32

# dc_feature_level --- Feature Level, indicates locking and debug feature level  00 = Basic cache, with no locking or debug features  01 = Lock and flush features supported  10 = Lock, flush and advanced debug features supported  11 = Reserved
-dc_feature_level 2

# dc_uncached_region --- Enable an uncached region defined by aux reg
-dc_uncached_region true

# dc_prot --- Specifies the type of protection built for DCACHE.
-dc_prot ECC

# dc_prot_level --- Specifies the level of protection.
-dc_prot_level Data_Addr

# dc_prot_exceptions --- Builds exception generation hardware for uncorrectable (fatal) errors detected on DCACHE.
-dc_prot_exceptions true


######## Debug Interface --- com.arc.hardware.Debug_Interface.1_0 ########

# Create Debug Interface
-create com.arc.hardware.Debug_Interface.1_0 "System.CPUisle.ARCv2EM.Debug Interface"

# dbg_en_option --- Adds an enable pin to the existing debug interface
-dbg_en_option false

# scdbg_aux_unlk --- An internal demo module will be included when enable
-scdbg_aux_unlk false

# dbg_apb_option --- Adds an additional APB debug port alongside the BVCI one
-dbg_apb_option false


######## Floating-point unit --- com.arc.hardware.Floating_point_unit.1_0 ########

# Create Floating-point unit
-create com.arc.hardware.Floating_point_unit.1_0 "System.CPUisle.ARCv2EM.Floating-point unit"

# fpu_dp_assist --- This enables double-precision acceleration instructions.
-fpu_dp_assist true

# fpu_fma_option --- This enables the fused multiply-add & multiply-subtract instructions.
-fpu_fma_option true

# fpu_mas_cycles --- Make mul/add/sub multicycle to achieve a higher clock speed.
-fpu_mas_cycles 2

# fpu_pipe_impl --- FPU pipelined implementation
-fpu_pipe_impl true

# fpu_div_option --- This enables divide & square-root acceleration
-fpu_div_option true

# fpu_div_cycles --- Controls div/sqrt implementation.
-fpu_div_cycles 17


######## ICCM0 --- com.arc.hardware.ICCM0.1_0 ########

# Create ICCM0
-create com.arc.hardware.ICCM0.1_0 System.CPUisle.ARCv2EM.ICCM0

# iccm0_size --- This defines the size of ICCM0 in bytes.This ICCM has 0 wait states.
-iccm0_size 32768

# iccm0_base --- Sets the initial memory region assignment for ICCM0
-iccm0_base 1

# iccm0_wide --- Creates ICCM0 as 64b memory to reduce accesses.
-iccm0_wide false

# iccm0_prot --- Specifies the type of protection built for ICCM0.
-iccm0_prot ECC

# iccm0_prot_level --- Specifies the level of protection.
-iccm0_prot_level Data_Addr

# iccm0_prot_exceptions --- When the core is configured with ECC or Parity, cause exception generation hardware to be created for uncorrectable errors detected on the ICCM0
-iccm0_prot_exceptions true

# iccm0_sec_lvl --- Specifies the level of secure ICCM0.
-iccm0_sec_lvl Non_Secure

# iccm0_dmi --- This enables external access through a DMI (direct memory interface) port.
-iccm0_dmi false


######## Instruction Cache --- com.arc.hardware.Instruction_Cache.1_0 ########

# Create Instruction Cache
-create com.arc.hardware.Instruction_Cache.1_0 "System.CPUisle.ARCv2EM.Instruction Cache"

# ic_size --- This defines the total size of the instruction cache in bytes.
-ic_size 32768

# ic_ways --- This defines the number of cache ways
-ic_ways 2

# ic_bsize --- This defines the cache line length in bytes.
-ic_bsize 32

# ic_disable_on_reset --- The instruction cache may be enabled immediately after reset, depending on this option.  If this option is enabled, the last cache operation is set to failed, and the direct cache-RAM access is enabled.  Furthermore, the instruction cache is invalidated  all cache lines are invalidated and unlocked, and the tag RAM is cleared.
-ic_disable_on_reset true

# ic_feature_level --- This defines the feature level of the cache.
-ic_feature_level 0

# ic_pwr_opt_level --- This selects power-optimization options in the micro-architecture of the instruction cache.
-ic_pwr_opt_level 0

# ic_prot --- Specifies the type of protection built for ICACHE.
-ic_prot ECC

# ic_prot_level --- Specifies the level of protection.
-ic_prot_level Data_Addr

# ic_prot_exceptions --- Builds exception generation hardware for uncorrectable (fatal) errors detected on ICACHE.
-ic_prot_exceptions true


######## Interrupt Controller --- com.arc.hardware.Interrupt_Controller.1_0 ########

# Create Interrupt Controller
-create com.arc.hardware.Interrupt_Controller.1_0 "System.CPUisle.ARCv2EM.Interrupt Controller"

# number_of_interrupts --- This is the total number of interrupts available to the core.  Some interrupts are allocated statically to a specific interrupt line (for example, timer interrupts).  For more information on Interrupt and register-file options, see DesignWare ARCv2 ISA Programmers Reference Manual.
-number_of_interrupts 112

# number_of_levels --- Priority levels in the interrupt controller.
-number_of_levels 2

# external_interrupts --- This is the total number of interrupt pins available for external system components.  This parameter must be less than the total number of interrupts.
-external_interrupts 109

# firq_option --- This enables the fast-interrupts option, (priority level 0 interrupts), which uses an alternate register bank (if configured) instead of saving the context to memory.
-firq_option false


######## JTAG Interface --- com.arc.hardware.JTAG_Interface.1_0 ########

# Create JTAG Interface
-create com.arc.hardware.JTAG_Interface.1_0 "System.CPUisle.ARCv2EM.JTAG Interface"

######## Memory Protection Unit --- com.arc.hardware.Memory_Protection_Unit.1_0 ########

# Create Memory Protection Unit
-create com.arc.hardware.Memory_Protection_Unit.1_0 "System.CPUisle.ARCv2EM.Memory Protection Unit"

# mpu_num_regions --- Number of configured memory regions.
-mpu_num_regions 16

# mpu_32b --- Set the minimal region size to be 32 byte instead of 2KB.
-mpu_32b false

# mpu_sid_option --- It will enable SID support in Secure Shield
-mpu_sid_option false


######## Real-time Counter --- com.arc.hardware.Real_time_Counter.1_0 ########

# Create Real-time Counter
-create com.arc.hardware.Real_time_Counter.1_0 "System.CPUisle.ARCv2EM.Real-time Counter"

######## Timer 0 --- com.arc.hardware.Timer_0.1_0 ########

# Create Timer 0
-create com.arc.hardware.Timer_0.1_0 "System.CPUisle.ARCv2EM.Timer 0"

# timer_0_int_level --- This sets the interrupt level (and implicitly the priority: level 0 is highest) of timer 0.
-timer_0_int_level 1


######## Timer 1 --- com.arc.hardware.Timer_1.1_0 ########

# Create Timer 1
-create com.arc.hardware.Timer_1.1_0 "System.CPUisle.ARCv2EM.Timer 1"

# timer_1_int_level --- This sets the interrupt level (and implicitly the priority: level 0 is highest) of timer 1.
-timer_1_int_level 0


######## Watchdog Timer --- com.arc.hardware.Watchdog_Timer.1_0 ########

# Create Watchdog Timer
-create com.arc.hardware.Watchdog_Timer.1_0 "System.CPUisle.ARCv2EM.Watchdog Timer"

# watchdog_size --- Specifies the bit width of timer's internal counter.
-watchdog_size 32

# watchdog_clk --- Specifies whether the timer should be driven from a separate clock.
-watchdog_clk false


######## ClkCtrl --- com.arc.hardware.ARCv2MSS.ClkCtrl.1_0 ########

# Create ClkCtrl
-create com.arc.hardware.ARCv2MSS.ClkCtrl.1_0 System.ClkCtrl

# alb_mss_clkctrl_base_addr --- This specifies the clock controller base address in the memory map, divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_clkctrl_base_addr 0xc_0000

# alb_mss_clkctrl_bypass_mode --- If true then all clock dividers/gaters in the clock controller are bypassed, clock ratio is not supported and the division options/registers are overriden
-alb_mss_clkctrl_bypass_mode false


######## Generic ASIC Library Data --- com.synopsys.GenericTechnologyLibrary.1_0 ########

# Create Generic ASIC Library Data
-create com.synopsys.GenericTechnologyLibrary.1_0 "System.Generic ASIC Library Data"

# Geometry --- The desired ASIC geometry used for synthesis.
-geometry 0.045

# DontUseList --- List of synthesis library cells NOT to be used.
-dont_use_list ""

# DrivingCellName --- The name of the driving cell used to set the context for synthesis.
-driving_cell_name SEN_BUF_8

# DrivingCellPin --- The name of the ouput pin on the driving cell.
-driving_cell_pin X

# LoadPin --- The load pin of the driving cell.
-load_pin A

# TechLibPath --- The path to the synthesis technology library (i.e. where *.db files are located) 
-tech_lib_path "/remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/liberty/logic_synth /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npksdst/latest/liberty/logic_synth /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkspdt/latest/liberty/logic_synth"

# TechCellFile --- The path and file name of the Verilog technology library cell file.
-tech_cell_path "/remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/verilog/3.0/ts40npkldst.v /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npksdst/latest/verilog/3.0/ts40npksdst.v /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkspdt/latest/verilog/3.0/ts40npkspdt.v"

# TechCellLef --- A comma separated list of LEF files. The first file must contain the LEF technology information in addition to any macros defined. Subsequent files may contain additional macro definitions e.g. definitions of the standard cells.
-tech_cell_lef /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/lef/5.6/ts40npkldst_m07f0f2_RDL.lef,/remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/lef/5.6/ts40npkldst.lef,/remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npksdst/latest/lef/5.6/ts40npksdst.lef,/remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkspdt/latest/lef/5.6/ts40npkspdt.lef

# SymbolLib --- The name of the file that contains the symbol library for synthesis.
-symbol_lib ""

# MaxLibFile --- The file name of the max synthesis library
-max_lib_file "ts40npkldst_ss0p99v125c.db  ts40npksdst_ss0p99v125c.db   ts40npkspdt_ss0p99v125c.db ts40npkspdt_pg_ss0p99v125c.db ts40npkspdt_dlvl_ss0p99v125c.db ts40npkspdt_dlvl_ss0p99v125c_i1p08v.db ts40npkspdt_dlvl_ss0p99v125c_i1p1v.db ts40npkspdt_ulvl_ss0p99v125c.db ts40npkspdt_ulvl_ss0p99v125c_i0p66v.db ts40npkspdt_ulvl_ss0p99v125c_i0p81v.db ts40npkspdt_ulvl_ss0p99v125c_i0p88v.db"

# MaxLibName --- The name of the max library used for synthesis.
-max_lib_name "ts40npkldst_ss0p99v125c  ts40npksdst_ss0p99v125c  ts40npkspdt_ss0p99v125c ts40npkspdt_pg_ss0p99v125c ts40npkspdt_dlvl_ss0p99v125c ts40npkspdt_dlvl_ss0p99v125c_i1p08v ts40npkspdt_dlvl_ss0p99v125c_i1p1v ts40npkspdt_ulvl_ss0p99v125c ts40npkspdt_ulvl_ss0p99v125c_i0p66v ts40npkspdt_ulvl_ss0p99v125c_i0p81v ts40npkspdt_ulvl_ss0p99v125c_i0p88v"

# MinLibFile --- The name of the file containing the min synthesis library.
-min_lib_file "ts40npkldst_ff1p21vn40c.db  ts40npksdst_ff1p21vn40c.db  ts40npkspdt_ff1p21vn40c.db ts40npkspdt_pg_ff1p21vn40c.db ts40npkspdt_dlvl_ff1p21vn40c.db ts40npkspdt_dlvl_ff1p21vn40c_i1p26v.db ts40npkspdt_ulvl_ff1p21vn40c.db ts40npkspdt_ulvl_ff1p21vn40c_i0p99v.db"

# MinLibName --- The name of the min synthesis library.
-min_lib_name "ts40npkldst_ff1p21vn40c ts40npksdst_ff1p21vn40c  ts40npkspdt_ff1p21vn40c ts40npkspdt_pg_ff1p21vn40c ts40npkspdt_dlvl_ff1p21vn40c ts40npkspdt_dlvl_ff1p21vn40c_i1p26v ts40npkspdt_ulvl_ff1p21vn40c ts40npkspdt_ulvl_ff1p21vn40c_i0p99v"

# TypLibFile --- The name of the file containing the typical synthesis library.
-typ_lib_file "ts40npkldst_tt1p1v25c.db  ts40npksdst_tt1p1v25c.db ts40npkspdt_tt1p1v25c.db ts40npkspdt_pg_tt1p1v25c.db ts40npkspdt_dlvl_tt1p1v25c.db ts40npkspdt_ulvl_tt1p1v25c.db ts40npkspdt_ulvl_tt1p1v25c_i0p9v.db"

# TypLibName --- The name of the typical synthesis library.
-typ_lib_name "ts40npkldst_tt1p1v25c  ts40npksdst_tt1p1v25c ts40npkspdt_tt1p1v25c ts40npkspdt_pg_tt1p1v25c ts40npkspdt_dlvl_tt1p1v25c ts40npkspdt_ulvl_tt1p1v25c ts40npkspdt_ulvl_tt1p1v25c_i0p9v"

# SynOperatingCon --- The synthesis operating conditions.
-syn_operating_con SS0P99V125C

# LibraryList --- List of library names used in this component. Order must be same as ,db model names
-library_list "ts40npkldst  ts40npksdst ts40npkspdt ts40npkspdt_pg ts40npkspdt_dlvl ts40npkspdt_ulvl ts40npkspdt_ulvl"

# PtSlowOpCons --- The operating conditions to be used for worst case static timing analysis
-pt_slow_op_cons SS0P99V125C

# PtFastOpCons --- The operating conditions to be used for best case static timing analysis.
-pt_fast_op_cons FF1P21VN40C

# PtTypicalOpCons --- The operating conditions to be used for typical case static timing analysis.
-pt_typical_op_cons TT1P1V25C

# PhysLibPath --- The path to the Synopsys physical synthesis libraries.
-phys_lib_path ""

# PhysLib --- The Synopsys physical synthesis library name.
-phys_lib ""

# DataBasePath --- The path and name of the 'map file' located at the top level of the DataBase containing the pre-compiled Vendor RAM models and wrapper files.
-data_base_path arcrams_lib/map_file.txt

# CapTable --- File containing lookup tables for fast estimation of parasitics in Cadence's FirstEncounter tool
-cap_table ""

# BufFootprint --- The names of the footprints in the library that represent buffers
-buf_footprint SST_BUF

# InvFootprint --- The names of the footprints in the library that represent inverters
-inv_footprint SST_INV

# DelFootprint --- The names of the footprints in the library that represent delay cells
-del_footprint SST_DEL_L4

# ClockGatingCell --- Name of clock gating cell to be used as architectural clock gate or as RTL-inferred ICG
-clock_gating_cell SEL_CKGTPLT_V5_8

# ClockNGatingCell --- Name of the negedge clock gating cell to be used as architectural clock gate or as RTL-inferred ICG
-clockn_gating_cell SEL_CKGTNLT_V5_8

# DecapCells --- list of decap cells for this library
-decap_cells "SEL_DCAP64 SEL_DCAP32 SEL_DCAP16 SEL_DCAP8 SEL_DCAP4"

# FillerCells --- list of filler cells for this library
-filler_cells "SEL_FILL64 SEL_FILL32 SEL_FILL16 SEL_FILL12 SEL_FILL8 SEL_FILL6 SEL_FILL5  SEL_FILL4  SEL_FILL3 SEL_FILL2  SEL_FILL1"

# AntDiodeCells --- list of antenna diode protection cells for this library
-ant_diode_cells SEL_TIEDIN_1

# MinWellTapDistance --- Minimum required distance between well-tap cells ( in microns ) 
-min_nwell_tap_distance 110

# NwellTapCell --- Name of nwell tap cell to be used
-nwell_tap_cell SEL_TAPDS1T5

# NwellAoTapCell --- Name of nwell always-on tap cell to be used
-nwell_ao_tap_cell PEL_TAPPP

# EndCapCellLeft --- Name of end cap cells to be used at left side of row
-end_cap_cell_left SEL_CAPL8

# EndCapCellRight --- Name of end cap cells to be used at right side of row
-end_cap_cell_right SEL_CAPR8

# EndCapCellTop --- Name of end cap cells to be used at top side of row
-end_cap_cell_top ""

# EndCapCellBottom --- Name of end cap cells to be used at bottom side of row
-end_cap_cell_bottom ""

# EndCapCellTopLeftOutside --- Name of end cap cells to be used at top left outside corner
-end_cap_cell_top_left_outside ""

# EndCapCellTopRightOutside --- Name of end cap cells to be used at top right outside corner
-end_cap_cell_top_right_outside ""

# EndCapCellBottomLeftOutside --- Name of end cap cells to be used at bottom left outside corner
-end_cap_cell_bottom_left_outside ""

# EndCapCellBottomRightOutside --- Name of end cap cells to be used at bottom right outside corner
-end_cap_cell_bottom_right_outside ""

# EndCapCellTopLeftInside --- Name of end cap cells to be used at top left inside corner
-end_cap_cell_top_left_inside ""

# EndCapCellTopRightInside --- Name of end cap cells to be used at top right inside corner
-end_cap_cell_top_right_inside ""

# EndCapCellBottomLeftInside --- Name of end cap cells to be used at bottom left inside corner
-end_cap_cell_bottom_left_inside ""

# EndCapCellBottomRightInside --- Name of end cap cells to be used at bottom right inside corner
-end_cap_cell_bottom_right_inside ""

# GdsLayerMapFile --- Name of file mapping layers names to GDS2 layer numbers
-gds_layer_map_file ""

# MetalFillDeck --- Name of file ICV/Hercules deck for doing metal fill on GDS2 view
-metal_fill_deck ""

# AntRuleDeck --- Name of file ICV/Hercules deck for doing Antenna rule checking
-ant_rule_deck ""

# DrcRuleDeck --- Name of file ICV/Hercules deck for doing DRC checking
-drc_rule_deck ""

# LvsRuleDeck --- Name of file ICV/Hercules deck for doing LVS checking
-lvs_rule_deck ""

# AntRuleFile --- Name of file TCL rule file for doing Antenna fixing
-ant_rule_file /remote/arc/arc6000/libext/stdcell/28HPC/ts28_hpc_lvt_gate_30nm_hd_base/latest/milkyway/antenna/antenna_rule_db_update_m10f2f0f2_RDL.tcl

# EmRuleFile --- Name of file ALF rule file for doing ElectoMigration Analysis
-em_rule_file /remote/arc/arc6000/libext/stdcell/28HPC/ts28_hpc_lvt_gate_30nm_hd_base/latest/milkyway/alf/ts28nchllogl30hdl140f_m10f2f0f2_RDL.alf

# DblViaOrderFile --- Name of file with foundry-preferred order of doubled vias when doing via doubling
-dbl_via_order_file /remote/arc/arc6000/libext/stdcell/28HPC/ts28_hpc_lvt_gate_30nm_uhd_base/latest/demo/pnr/ICC/cmds/ts28.rvi.map

# ClockBufferCells --- A list of buffers and inverters in the library that may be used in the construction of a clock tree
-clock_buffers "SEL_BUF_S_2 SEL_BUF_S_4 SEL_BUF_S_6 SEL_BUF_S_8 SEL_BUF_S_12 SEL_INV_S_2 SEL_INV_S_4 SEL_INV_S_6 SEL_INV_S_8 SEL_INV_S_12"

# ClockTransition --- The maximum transition time allowed on clock nets
-clock_transition 0.3

# QxTechnology --- Technology file for Cadence's 3D extraction engine, QX
-qx_techfile /remote/arc/arc6000/libext/iclibs/TSMC45/PcC040LP_CRN45SHRINK_7M4X0Y2Z0UPDK/0.2/tools/cadence_ext/7.1.2/GXL/LP/GXL_LP_rcworst/qrcTechFile

# QxLibrary --- The location of the QX library data
-qx_library /remote/arc/arc6000/libext/iclibs/TSMC45/PcC045LP_CRN45_7M4X0Y2Z0UPDK/1.1.1/tools/cadence_anls/xtc

# RAMWePolarity --- Defines the polarity of the write enable signals for all RAMs in the ARC700.
-ram_we_polarity 0

# RAMCkPolarity --- Defines the polarity of the clock enable signals for all RAMs in the ARC700.
-ram_ck_polarity 0

# MilkywayTechFile --- The path to the technology file for milkyway libraries.
-mw_tech_file /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/milkyway/tf/ts40npkldst_m10f2f2_RDL.tf

# MilkywaySearchPath --- A comma separated list of directories to use when searching for milkyway libraries
-mw_search_path "/remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/milkyway /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npksdst/latest/milkyway /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkspdt/latest/milkyway"

# MilkywayCellLibraries --- A comma separated list of milkyway databases to be found on the search path
-mw_cell_libs "/remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/milkyway/ts40npkldst_m10f2f2_RDL  /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npksdst/latest/milkyway/ts40npksdst_m10f2f2_RDL /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkspdt/latest/milkyway/ts40npkspdt_m10f2f2_RDL"

# MilkywayPowerNet --- The name of the power net needed by write_milkyway
-mw_power_net VDD

# MilkywayGroundNet --- The name of the ground net needed by write_milkyway
-mw_ground_net VSS

# TLUPlusMaxFile --- The TLU+ file which contains the parameters for max extraction
-tluplus_max_file /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/milkyway/tlup/tsmc_cln40lp_1p10m+alrdl_5x2y2z_cworst_1.1_1p1.tluplus

# TLUPlusMinFile --- The TLU+ file which contains the parameters for min extraction
-tluplus_min_file /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/milkyway/tlup/tsmc_cln40lp_1p10m+alrdl_5x2y2z_cbest_1.1_1p1.nxtgrd

# TLUMapFile --- The TLU+ map file to map layers names to the Milkyway layer names
-tluplus_map_file /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/milkyway/tlup/layers.map

# max_NXTGRD --- The NXTGRD file is used for parasitic extraction with StarRC
-max_nxtgrd /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/milkyway/tlup/tsmc_cln40lp_1p10m+alrdl_5x2y2z_cworst_1.1_1p1.nxtgrd

# min_NXTGRD --- The NXTGRD file is used for parasitic extraction with StarRC
-min_nxtgrd /remote/arc/arc6000/libext/stdcell/40LP/HighDensity/ts40npkldst/latest/milkyway/tlup/tsmc_cln40lp_1p10m+alrdl_5x2y2z_cbest_1.1_1p1.nxtgrd

# IcgCellCkPinName --- Name of clock input pin on integrated clock gating cell
-icgcell_ck_pin_name CK

# IcgCellQPinName --- Name of gated clock output pin on integrated clock gating cell
-icgcell_q_pin_name Q

# IcgCellFEPinName --- Name of the functional enable pin on integrated clock gating cell
-icgcell_fe_pin_name EN

# IcgCellTEPinName --- Name of the test enable pin on integrated clock gating cell
-icgcell_te_pin_name SE

# SupplyVolt_wc --- Worst-case operating voltage
-supply_volt_wc 0.99

# SupplyVolt_bc --- Best-case operating voltage
-supply_volt_bc 1.21

# IsoCellClampHigh --- Name of isolation cell to be used as clamp high
-iso_cell_clamp_high PEN_ISOS0CL1_*

# IsoCellClampLow --- Name of isolation cell to be used as clamp low
-iso_cell_clamp_low PEN_ISOS1CL0_*

# PwrSwitchCell --- Name of power switch cell to be used
-pwr_switch_cell PEN_PGATDRV_OW_12

# PwrSwitchCellResWc --- Worst case power switch cell resistance
-power_switch_cell_res_wc 233.4

# PwrSwitchCellPinLayers --- Primary and secondary (=always on and gated) power pins and associated layer names
-power_switch_cell_pin_layers "VDDP M2 VDDC M2"

# SupplyVoltULP_wc --- Worst-case ultra low power operating voltage for std cell parts
-supply_volt_ulp_wc 0.63

# LSCellHigh2Low --- Level shifter cell from high to low voltage domain
-ls_cell_high_2_low "PTQ_LVLDBUF_DP_* PTQ_LVLDBUF_D_*"

# LSCellLow2High --- level shifter cell from low to high voltage domain
-ls_cell_low_2_high "PTQ_LVLDBUF_PU_* PTQ_LVLDBUF_U_* PTQ_LVLDBUF_PY2_* PTQ_LVLDBUF_Y2_*"

# SingleFfSyncCell --- Single flip-flop synchronizer cell
-single_ff_sync_cell ""

# SingleFfSyncCellRstLowPol --- Defines the polarity of the reset signal for single flip-flop synchronizer cell.
-single_ff_sync_cell_rst_low_pol 0

# SingleFfSyncCellCkPinName --- Name of clock pin on single flip-flop synchronizer cell
-single_ff_sync_cell_ck_pin_name ""

# SingleFfSyncCellDPinName --- Name of data input pin on single flip-flop synchronizer cell
-single_ff_sync_cell_d_pin_name ""

# SingleFfSyncCellRstPinName --- Name of reset pin on single flip-flop synchronizer cell
-single_ff_sync_cell_rst_pin_name ""

# SingleFfSyncCellQPinName --- Name of data output pin on single flip-flop synchronizer cell
-single_ff_sync_cell_q_pin_name ""

# SingleNegEdgeFfSyncCell --- Single negative edge triggered flip-flop synchronizer cell
-single_negedge_ff_sync_cell ""

# SingleNegEdgeFfSyncCellRstLowPol --- Defines the polarity of the reset signal for single negative edge triggered flip-flop synchronizer cell.
-single_negedge_ff_sync_cell_rst_low_pol 0

# SingleNegEdgeFfSyncCellCkPinName --- Name of clock pin on single negative edge triggered flip-flop synchronizer cell
-single_negedge_ff_sync_cell_ck_pin_name ""

# SingleNegEdgeFfSyncCellDPinName --- Name of data input pin on single negative edge triggered flip-flop synchronizer cell
-single_negedge_ff_sync_cell_d_pin_name ""

# SingleNegEdgeFfSyncCellRstPinName --- Name of reset pin on single negative edge triggered flip-flop synchronizer cell
-single_negedge_ff_sync_cell_rst_pin_name ""

# SingleNegEdgeFfSyncCellQPinName --- Name of data output pin on single negative edge triggered flip-flop synchronizer cell
-single_negedge_ff_sync_cell_q_pin_name ""

# DoubleFfSyncCell --- Double flip-flop synchronizer cell
-double_ff_sync_cell ""

# DoubleFfSyncCellRstLowPol --- Defines the polarity of the reset signal for double flip-flop synchronizer cell.
-double_ff_sync_cell_rst_low_pol 0

# DoubleFfSyncCellCkPinName --- Name of clock pin on double flip-flop synchronizer cell
-double_ff_sync_cell_ck_pin_name ""

# DoubleFfSyncCellDPinName --- Name of data input pin on double flip-flop synchronizer cell
-double_ff_sync_cell_d_pin_name ""

# DoubleFfSyncCellRstPinName --- Name of reset pin on double flip-flop synchronizer cell
-double_ff_sync_cell_rst_pin_name ""

# DoubleFfSyncCellQPinName --- Name of data output pin on double flip-flop synchronizer cell
-double_ff_sync_cell_q_pin_name ""


######## Implementation --- com.arc.hardware.implementation.1_0 ########

# Create Implementation
-create com.arc.hardware.implementation.1_0 System.Implementation

# ClockSpeed --- Target clock speed of the system
-clock_speed 200

# DDR2_clk_Ratio --- DDR2 Clock Vs System Clock Ratio
# 2x
# 3x
# 4x
-ddr2_clk_ratio 3x

# ClockSkew --- The clock skew for the system
-clock_skew 0.2

# HoldMargin --- Margin for hold time checks
-hold_margin 0.05

# Floorplan --- Floorplan definition for relative placement of  RAMs (at CPU-level) or the placement of the rams and CPU hard cores (at multicore level)
-floorplan em6

# JTAGFrequency --- Select the frequency of the JTAG clock Tck (in MHz).
# 
# The JTAG clock speed has to be less than 1/2 of the cpu clock otherwise the signals on the BVCI interface are not guaranteed to be valid.
# 
# NOTE: The RTL simulations will work when the JTAG clock frequency is set to half the CPU clock, however this may not be the case when simulating at gate level due to delays on the IO pads.
# 
# The default is set to 10 MHz so that there is no conflict when simulating with an ARCangel3 at 30MHz. (30 > 10*2)
# 
# The speed of simulation can be greatly increased by using a faster JTAG clock, but a dependency will warn if it exceeds 1/2 of the cpu clock.
# 
-jtag_tclk 10

# execution_trace_level --- 
# This traces committed instructions as they execute, and gathers statistics
# visible in the debugger for counting instructions & cycle delays.
# At the "stats" level ony the statistics are gathered and no trace is printed.
# "file" is equivalent to "full", but the results go to a trace .txt file instead.
# 
-execution_trace_level stats

# generate_ipxact --- 
# Generate ipxact.xml file describing the CPUisle or archipelago frontier
# 
-generate_ipxact false

# ipxact_relative_path_names --- 
# Use relative path names for Verilog files in the ipxact.
# Otherwise, absolute path names are used.
# 
-ipxact_relative_path_names true

# optional_encryption --- 
# When selected, encrypted RTL output is generated.
# 	
-optional_encryption false

# ignore_encrypt_license --- 
# When selected, pretend the encryption license is missing.  For testing.
# 	
-ignore_encrypt_license false

# ignore_clear_license --- 
# When selected, pretend the cleartest license is missing.  For testing.
# 	
-ignore_clear_license false


######## SRAMCtrl --- com.arc.hardware.ARCv2MSS.SRAMCtrl.1_0 ########

# Create SRAMCtrl
-create com.arc.hardware.ARCv2MSS.SRAMCtrl.1_0 System.SRAMCtrl

# alb_mss_mem_region_num --- The number of regions supported in SRAMCtrl component
-alb_mss_mem_region_num 1

# alb_mss_mem0_base_addr --- This specifies the base address of memory region 0 in the memory map, divided by 4KB i.e. do no specify the lower 12 bits of the address.
-alb_mss_mem0_base_addr 0

# alb_mss_mem0_size --- This specifies the memory size of memory region 0.
-alb_mss_mem0_size 1MB

# alb_mss_mem0_attr --- This specifies the memory access attribute of memory region 0.
-alb_mss_mem0_attr Read-Write

# alb_mss_mem0_secure --- This specifies the memory secure attribute of memory region 0.
-alb_mss_mem0_secure Non-Secure

# alb_mss_mem0_lat --- This specifies the maximum latency of memory region 0 .
-alb_mss_mem0_lat 0

# alb_mss_mem0_def_lat --- This specifies the latency after reset of memory region 0.
-alb_mss_mem0_def_lat 0

# alb_mss_mem1_base_addr --- This specifies the base address of memory region 1 in the memory map, divided by 4KB i.e. do no specify the lower 12 bits of the address.
-alb_mss_mem1_base_addr 1048576

# alb_mss_mem1_size --- This specifies the memory size of memory region 1.
-alb_mss_mem1_size 1MB

# alb_mss_mem1_attr --- This specifies the memory access attribute of memory region 1.
-alb_mss_mem1_attr Read-Write

# alb_mss_mem1_secure --- This specifies the memory secure attribute of memory region 1.
-alb_mss_mem1_secure Non-Secure

# alb_mss_mem1_lat --- This specifies the maximum latency of memory region 1 .
-alb_mss_mem1_lat 0

# alb_mss_mem1_def_lat --- This specifies the latency after reset of memory region 1.
-alb_mss_mem1_def_lat 0

# alb_mss_mem2_base_addr --- This specifies the base address of memory region 2 in the memory map, divided by 4KB i.e. do no specify the lower 12 bits of the address.
-alb_mss_mem2_base_addr 1048576

# alb_mss_mem2_size --- This specifies the memory size of memory region 2.
-alb_mss_mem2_size 1MB

# alb_mss_mem2_attr --- This specifies the memory access attribute of memory region 2.
-alb_mss_mem2_attr Read-Write

# alb_mss_mem2_secure --- This specifies the memory secure attribute of memory region 2.
-alb_mss_mem2_secure Non-Secure

# alb_mss_mem2_lat --- This specifies the maximum latency of memory region 2 .
-alb_mss_mem2_lat 0

# alb_mss_mem2_def_lat --- This specifies the latency after reset of memory region 2.
-alb_mss_mem2_def_lat 0

# alb_mss_mem3_base_addr --- This specifies the base address of memory region 3 in the memory map, divided by 4KB i.e. do no specify the lower 12 bits of the address.
-alb_mss_mem3_base_addr 1048576

# alb_mss_mem3_size --- This specifies the memory size of memory region 3.
-alb_mss_mem3_size 1MB

# alb_mss_mem3_attr --- This specifies the memory access attribute of memory region 3.
-alb_mss_mem3_attr Read-Write

# alb_mss_mem3_secure --- This specifies the memory secure attribute of memory region 3.
-alb_mss_mem3_secure Non-Secure

# alb_mss_mem3_lat --- This specifies the maximum latency of memory region 3 .
-alb_mss_mem3_lat 0

# alb_mss_mem3_def_lat --- This specifies the latency after reset of memory region 3.
-alb_mss_mem3_def_lat 0

# alb_mss_mem_is_default_slave --- If true then all transactions without destination will be routed here.
-alb_mss_mem_is_default_slave true

# alb_mss_mem_default_space --- This specifies the memory space width of the system.
-alb_mss_mem_default_space 32

# alb_mss_mem_data_width --- This specifies the memory data width
-alb_mss_mem_data_width 64


######## Synopsys XG Synthesis Flow --- com.synopsys.SynthesisFlow_XG.1_0 ########

# Create Synopsys XG Synthesis Flow
-create com.synopsys.SynthesisFlow_XG.1_0 "System.Synopsys XG Synthesis Flow"

# synopsysSynthesisFlow --- Add the synopsys SynthesisFlow component
-synopsys_xg_synthesis true

# Inbound12FFCopt --- 0:no limit imposed; 1-20 : the %number of cells which are allowed to be inbound 12-T
-inbound_12ffc_opt 0

# Retiming --- Instruct the design flow to retime modules as specified in retime_module_list
-enable_retiming false

# RetimeModuleList --- List of modules to be retimed
-retime_module_list ""

# InsertScanChains --- Instruct the design flow to automatically add in the scan chain structures.
-insert_scan_chains true

# ScanChains --- Indicates the number of scan chains to be used when stitching the scan registers;
# 	This option replaces the obsolete ScanChains option in implementation/System component.
-scan_chains 4

# InsertLogicBist --- Instruct the design flow to automatically add in the logic BIST structures.
-insert_logic_bist false

# LogicBistChains --- Indicates the number of logic BIST chains to be used when inserting Logic BIST
-logic_bist_chains 96

# PatternCounterWidth --- Indicates the width of logic BIST pattern counter
-pattern_counter_width 16

# InsertTestPoints --- Instruct the design flow to automatically add test points when inserting DfT structures.
-insert_test_points false

# PowerRampUp --- Specifies whether to run power ramp-up patterns prior to self-test.
-power_ramp_up false

# TestPointMethod --- Test Point Method
# DesignCompiler
# SpyGlassADV
-test_point_method DesignCompiler

# AutoUngroup --- Instruct the synthesis compile step to enable auto-ungrouping
-auto_ungroup true

# InsertClockGating --- When set this will cause Clock Gating Logic to be inserted during synthesis.
-insert_clock_gating true

# UPF --- When set this will cause UPF flow (isolation cell insertion) to be configured during synthesis.
-upf false

# DcUltra --- Enables Ultra optimization during synthesis.
-dc_ultra true

# MBFF --- Enables Targeting of multibit flops assuming library has them. Can cause performance drop but may give area/power saving
-mbff false

# DCTopographicMode --- Use DC Topographic mode for placement aware synthesis.
-dc_topographic true

# Hierarchical --- Enables hierarchical implementation flow.
-hierarchical false


######## Tool Configuration --- cgen.1_0 ########

# Create Tool Configuration
-create cgen.1_0 "System.Tool Configuration"

# mwdt_version --- Selects the MetaWare version to be used with the TCF file.
# Change from the default to an older or newer toolset version if you want the TCF file to be used with an older or newer version of the MetaWare tools.
-mwdt_version M-2016.12

# code_base_addr --- 
# The base address to assign to the executable code segment in the linker command file when there is no ICCM in the build.  This value is ignored when there is an ICCM.
# 
-code_base_addr 0x0

# data_base_addr --- 
# The base address to assign to the data segment in the linker command file when the data is not being mapped to a DCCM.  This value is ignored when the data segment is mapped to a DCCM, as in that case the base address of the DCCM memory is used.
# 
# A value of 0xffffffff means that the data segment will not be mapped to any specific address.
# 
-data_base_addr 0xffff_ffff

# underscores_in_numbers --- Use underscores in hex numbers to improve readability.
-underscores_in_numbers false

# tcf_rebrand --- Alternate branding of TCF (not used)
-rebrand false


]]></string>
  </configuration>
  <configuration name="assembler_defines" filename="core_config.s">
    <string><![CDATA[
.ifndef __core_config_s
	.define __core_config_s, 1
	.define _TOOL_CONFIG_VER, 10072
	.define	core_config_cir_identity,0x00000044
	.define	core_config_cir_identity_chipid,0
	.define	core_config_cir_identity_arcnum,0
	.define	core_config_cir_identity_arcver,68
	.define	core_config_cir_identity_family,4
	.define	core_config_cir_identity_corever,4
	.define	core_config_cir_aux_dccm,0x00a00000
	.define	core_config_bcr_bcr_ver,0x00000002
	.define	core_config_bcr_bcr_ver_version,2
	.define	core_config_bcr_vecbase_ac_build,0x00000010
	.define	core_config_bcr_vecbase_ac_build_version,4
	.define	core_config_bcr_vecbase_ac_build_vector_config,0
	.define	core_config_bcr_vecbase_ac_build_addr,0
	.define	core_config_bcr_mpu_build,0x00001002
	.define	core_config_bcr_mpu_build_i,0
	.define	core_config_bcr_mpu_build_s,0
	.define	core_config_bcr_mpu_build_regions,16
	.define	core_config_bcr_mpu_build_version,2
	.define	core_config_bcr_rf_build,0x00000102
	.define	core_config_bcr_rf_build_version,2
	.define	core_config_bcr_rf_build_p,1
	.define	core_config_bcr_rf_build_e,0
	.define	core_config_bcr_rf_build_r,0
	.define	core_config_bcr_rf_build_b,0
	.define	core_config_bcr_rf_build_d,0
	.define	core_config_bcr_d_cache_build,0x04216104
	.define	core_config_bcr_d_cache_build_version,4
	.define	core_config_bcr_d_cache_build_assoc,1
	.define	core_config_bcr_d_cache_build_capacity,6
	.define	core_config_bcr_d_cache_build_bsize,1
	.define	core_config_bcr_d_cache_build_fl,2
	.define	core_config_bcr_d_cache_build_ioc,0
	.define	core_config_bcr_d_cache_build_cp,0
	.define	core_config_bcr_d_cache_build_u,1
	.define	core_config_bcr_d_cache_build_cycles,0
	.define	core_config_bcr_dccm_build,0x00000704
	.define	core_config_bcr_dccm_build_w,0
	.define	core_config_bcr_dccm_build_cycles,0
	.define	core_config_bcr_dccm_build_interleave,0
	.define	core_config_bcr_dccm_build_size1,0
	.define	core_config_bcr_dccm_build_size0,7
	.define	core_config_bcr_dccm_build_version,4
	.define	core_config_bcr_timer_build,0x00010704
	.define	core_config_bcr_timer_build_sp1,0
	.define	core_config_bcr_timer_build_sp0,0
	.define	core_config_bcr_timer_build_p1,0
	.define	core_config_bcr_timer_build_p0,1
	.define	core_config_bcr_timer_build_st1,0
	.define	core_config_bcr_timer_build_st0,0
	.define	core_config_bcr_timer_build_rtc,1
	.define	core_config_bcr_timer_build_rtsc_ver,1
	.define	core_config_bcr_timer_build_rtsc,0
	.define	core_config_bcr_timer_build_t0,1
	.define	core_config_bcr_timer_build_t1,1
	.define	core_config_bcr_timer_build_version,4
	.define	core_config_bcr_i_cache_build,0x00026104
	.define	core_config_bcr_i_cache_build_assoc,1
	.define	core_config_bcr_i_cache_build_version,4
	.define	core_config_bcr_i_cache_build_capacity,6
	.define	core_config_bcr_i_cache_build_bsize,2
	.define	core_config_bcr_i_cache_build_fl,0
	.define	core_config_bcr_i_cache_build_d,0
	.define	core_config_bcr_iccm_build,0x00000704
	.define	core_config_bcr_iccm_build_w0,0
	.define	core_config_bcr_iccm_build_iccm1_size1,0
	.define	core_config_bcr_iccm_build_iccm0_size1,0
	.define	core_config_bcr_iccm_build_iccm1_size0,0
	.define	core_config_bcr_iccm_build_iccm0_size0,7
	.define	core_config_bcr_iccm_build_version,4
	.define	core_config_bcr_multiply_build,0x00020506
	.define	core_config_bcr_multiply_build_version16x16,2
	.define	core_config_bcr_multiply_build_dsp,0
	.define	core_config_bcr_multiply_build_cyc,1
	.define	core_config_bcr_multiply_build_type,1
	.define	core_config_bcr_multiply_build_version32x32,6
	.define	core_config_bcr_swap_build,0x00000003
	.define	core_config_bcr_swap_build_version,3
	.define	core_config_bcr_norm_build,0x00000003
	.define	core_config_bcr_norm_build_version,3
	.define	core_config_bcr_minmax_build,0x00000002
	.define	core_config_bcr_minmax_build_version,2
	.define	core_config_bcr_barrel_build,0x00000303
	.define	core_config_bcr_barrel_build_version,3
	.define	core_config_bcr_barrel_build_shift_option,3
	.define	core_config_bcr_isa_config,0x12027202
	.define	core_config_bcr_isa_config_res1,0
	.define	core_config_bcr_isa_config_d,1
	.define	core_config_bcr_isa_config_res2,0
	.define	core_config_bcr_isa_config_f,0
	.define	core_config_bcr_isa_config_c,2
	.define	core_config_bcr_isa_config_l,0
	.define	core_config_bcr_isa_config_n,0
	.define	core_config_bcr_isa_config_a,0
	.define	core_config_bcr_isa_config_b,0
	.define	core_config_bcr_isa_config_addr_size,2
	.define	core_config_bcr_isa_config_lpc_size,7
	.define	core_config_bcr_isa_config_pc_size,2
	.define	core_config_bcr_isa_config_version,2
	.define	core_config_bcr_erp_build,0x40049204
	.define	core_config_bcr_erp_build_l,0
	.define	core_config_bcr_erp_build_wd,2
	.define	core_config_bcr_erp_build_c,0
	.define	core_config_bcr_erp_build_mmu,0
	.define	core_config_bcr_erp_build_rf,0
	.define	core_config_bcr_erp_build_pc,0
	.define	core_config_bcr_erp_build_ic,2
	.define	core_config_bcr_erp_build_dc,2
	.define	core_config_bcr_erp_build_ip,2
	.define	core_config_bcr_erp_build_dp,2
	.define	core_config_bcr_erp_build_version,4
	.define	core_config_bcr_fpu_build,0x01004f03
	.define	core_config_bcr_fpu_build_da,1
	.define	core_config_bcr_fpu_build_dd,0
	.define	core_config_bcr_fpu_build_dc,0
	.define	core_config_bcr_fpu_build_df,0
	.define	core_config_bcr_fpu_build_dp,0
	.define	core_config_bcr_fpu_build_fd_v1,2
	.define	core_config_bcr_fpu_build_pi,1
	.define	core_config_bcr_fpu_build_fd,0
	.define	core_config_bcr_fpu_build_fm,0
	.define	core_config_bcr_fpu_build_sd,1
	.define	core_config_bcr_fpu_build_sc,1
	.define	core_config_bcr_fpu_build_sf,1
	.define	core_config_bcr_fpu_build_sp,1
	.define	core_config_bcr_fpu_build_version,3
	.define	core_config_bcr_core_config,0x00000101
	.define	core_config_bcr_core_config_turbo_boost,1
	.define	core_config_bcr_core_config_version,1
	.define	core_config_bcr_irq_build,0x016d7001
	.define	core_config_bcr_irq_build_raz,0
	.define	core_config_bcr_irq_build_nmi,0
	.define	core_config_bcr_irq_build_f,0
	.define	core_config_bcr_irq_build_p,1
	.define	core_config_bcr_irq_build_exts,109
	.define	core_config_bcr_irq_build_irqs,112
	.define	core_config_bcr_irq_build_version,1
	.define	core_config_cir_aux_iccm,0x00100000
	.define	core_config_family,4
	.define	core_config_core_version,3
	.define	core_config_family_name,"arcv2em"
	.define	core_config_rgf_num_banks,1
	.define	core_config_rgf_num_wr_ports,2
	.define	core_config_endian,"little"
	.define	core_config_endian_little,1
	.define	core_config_endian_big,0
	.define	core_config_lpc_size,32
	.define	core_config_pc_size,24
	.define	core_config_addr_size,24
	.define	core_config_code_density,1
	.define	core_config_div_rem,"radix2"
	.define	core_config_div_rem_radix2,1
	.define	core_config_turbo_boost,1
	.define	core_config_swap,1
	.define	core_config_bitscan,1
	.define	core_config_mpy_option,"wlh2"
	.define	core_config_mpy_option_num,3
	.define	core_config_shift_assist,1
	.define	core_config_barrel_shifter,1
	.define	core_config_fpus_div,1
	.define	core_config_fpu_mac,1
	.define	core_config_fpuda,1
	.define	core_config_fpus_mpy_slow,1
	.define	core_config_fpus_div_slow,1
	.define	core_config_timer0,1
	.define	core_config_timer0_level,1
	.define	core_config_timer0_vector,16
	.define	core_config_timer1,1
	.define	core_config_timer1_level,0
	.define	core_config_timer1_vector,17
	.define	core_config_rtc,1
	.define	core_config_mpu_present,1
	.define	core_config_mpu,1
	.define	core_config_mpu_regions,16
	.define	core_config_interrupts_present,1
	.define	core_config_interrupts_number,112
	.define	core_config_interrupts_priorities,2
	.define	core_config_interrupts_externals,109
	.define	core_config_interrupts,112
	.define	core_config_interrupt_priorities,2
	.define	core_config_ext_interrupts,109
	.define	core_config_interrupts_base,0x0
	.define	core_config_dcache_present,1
	.define	core_config_dcache_size,32768
	.define	core_config_dcache_line_size,32
	.define	core_config_dcache_ways,2
	.define	core_config_dcache_feature,2
	.define	core_config_dcache_uncached_region,1
	.define	core_config_icache_present,1
	.define	core_config_icache_size,32768
	.define	core_config_icache_line_size,32
	.define	core_config_icache_ways,2
	.define	core_config_icache_feature,0
	.define	core_config_dccm_present,1
	.define	core_config_dccm_size,0x8000
	.define	core_config_dccm_base,0x00a00000
	.define	core_config_iccm_present,1
	.define	core_config_iccm0_present,1
	.define	core_config_iccm_size,0x8000
	.define	core_config_iccm0_size,0x8000
	.define	core_config_iccm_base,0x00100000
	.define	core_config_iccm0_base,0x00100000
	.define	core_config_error_prot_ver,4
	.define	core_config_iccm0_prot,"ecc"
	.define	core_config_iccm0_prot_level,"data_addr"
	.define	core_config_dccm_prot,"ecc"
	.define	core_config_dccm_prot_level,"data_addr"
	.define	core_config_ic_prot,"ecc"
	.define	core_config_ic_prot_level,"data_addr"
	.define	core_config_dc_prot,"ecc"
	.define	core_config_dc_prot_level,"data_addr"
	.define	core_config_watchdog,1
	.define	core_config_watchdog_size,32
	.define	core_config_clock_speed,200
.endif ; __core_config_s

]]></string>
  </configuration>
  <configuration name="C_defines" filename="core_config.h">
    <string><![CDATA[
#ifndef __core_config_h
	#define __core_config_h  1
	#define _TOOL_CONFIG_VER 10072
	#define	core_config_cir_identity	0x00000044
	#define	core_config_cir_identity_chipid	0
	#define	core_config_cir_identity_arcnum	0
	#define	core_config_cir_identity_arcver	68
	#define	core_config_cir_identity_family	4
	#define	core_config_cir_identity_corever	4
	#define	core_config_cir_aux_dccm	0x00a00000
	#define	core_config_bcr_bcr_ver	0x00000002
	#define	core_config_bcr_bcr_ver_version	2
	#define	core_config_bcr_vecbase_ac_build	0x00000010
	#define	core_config_bcr_vecbase_ac_build_version	4
	#define	core_config_bcr_vecbase_ac_build_vector_config	0
	#define	core_config_bcr_vecbase_ac_build_addr	0
	#define	core_config_bcr_mpu_build	0x00001002
	#define	core_config_bcr_mpu_build_i	0
	#define	core_config_bcr_mpu_build_s	0
	#define	core_config_bcr_mpu_build_regions	16
	#define	core_config_bcr_mpu_build_version	2
	#define	core_config_bcr_rf_build	0x00000102
	#define	core_config_bcr_rf_build_version	2
	#define	core_config_bcr_rf_build_p	1
	#define	core_config_bcr_rf_build_e	0
	#define	core_config_bcr_rf_build_r	0
	#define	core_config_bcr_rf_build_b	0
	#define	core_config_bcr_rf_build_d	0
	#define	core_config_bcr_d_cache_build	0x04216104
	#define	core_config_bcr_d_cache_build_version	4
	#define	core_config_bcr_d_cache_build_assoc	1
	#define	core_config_bcr_d_cache_build_capacity	6
	#define	core_config_bcr_d_cache_build_bsize	1
	#define	core_config_bcr_d_cache_build_fl	2
	#define	core_config_bcr_d_cache_build_ioc	0
	#define	core_config_bcr_d_cache_build_cp	0
	#define	core_config_bcr_d_cache_build_u	1
	#define	core_config_bcr_d_cache_build_cycles	0
	#define	core_config_bcr_dccm_build	0x00000704
	#define	core_config_bcr_dccm_build_w	0
	#define	core_config_bcr_dccm_build_cycles	0
	#define	core_config_bcr_dccm_build_interleave	0
	#define	core_config_bcr_dccm_build_size1	0
	#define	core_config_bcr_dccm_build_size0	7
	#define	core_config_bcr_dccm_build_version	4
	#define	core_config_bcr_timer_build	0x00010704
	#define	core_config_bcr_timer_build_sp1	0
	#define	core_config_bcr_timer_build_sp0	0
	#define	core_config_bcr_timer_build_p1	0
	#define	core_config_bcr_timer_build_p0	1
	#define	core_config_bcr_timer_build_st1	0
	#define	core_config_bcr_timer_build_st0	0
	#define	core_config_bcr_timer_build_rtc	1
	#define	core_config_bcr_timer_build_rtsc_ver	1
	#define	core_config_bcr_timer_build_rtsc	0
	#define	core_config_bcr_timer_build_t0	1
	#define	core_config_bcr_timer_build_t1	1
	#define	core_config_bcr_timer_build_version	4
	#define	core_config_bcr_i_cache_build	0x00026104
	#define	core_config_bcr_i_cache_build_assoc	1
	#define	core_config_bcr_i_cache_build_version	4
	#define	core_config_bcr_i_cache_build_capacity	6
	#define	core_config_bcr_i_cache_build_bsize	2
	#define	core_config_bcr_i_cache_build_fl	0
	#define	core_config_bcr_i_cache_build_d	0
	#define	core_config_bcr_iccm_build	0x00000704
	#define	core_config_bcr_iccm_build_w0	0
	#define	core_config_bcr_iccm_build_iccm1_size1	0
	#define	core_config_bcr_iccm_build_iccm0_size1	0
	#define	core_config_bcr_iccm_build_iccm1_size0	0
	#define	core_config_bcr_iccm_build_iccm0_size0	7
	#define	core_config_bcr_iccm_build_version	4
	#define	core_config_bcr_multiply_build	0x00020506
	#define	core_config_bcr_multiply_build_version16x16	2
	#define	core_config_bcr_multiply_build_dsp	0
	#define	core_config_bcr_multiply_build_cyc	1
	#define	core_config_bcr_multiply_build_type	1
	#define	core_config_bcr_multiply_build_version32x32	6
	#define	core_config_bcr_swap_build	0x00000003
	#define	core_config_bcr_swap_build_version	3
	#define	core_config_bcr_norm_build	0x00000003
	#define	core_config_bcr_norm_build_version	3
	#define	core_config_bcr_minmax_build	0x00000002
	#define	core_config_bcr_minmax_build_version	2
	#define	core_config_bcr_barrel_build	0x00000303
	#define	core_config_bcr_barrel_build_version	3
	#define	core_config_bcr_barrel_build_shift_option	3
	#define	core_config_bcr_isa_config	0x12027202
	#define	core_config_bcr_isa_config_res1	0
	#define	core_config_bcr_isa_config_d	1
	#define	core_config_bcr_isa_config_res2	0
	#define	core_config_bcr_isa_config_f	0
	#define	core_config_bcr_isa_config_c	2
	#define	core_config_bcr_isa_config_l	0
	#define	core_config_bcr_isa_config_n	0
	#define	core_config_bcr_isa_config_a	0
	#define	core_config_bcr_isa_config_b	0
	#define	core_config_bcr_isa_config_addr_size	2
	#define	core_config_bcr_isa_config_lpc_size	7
	#define	core_config_bcr_isa_config_pc_size	2
	#define	core_config_bcr_isa_config_version	2
	#define	core_config_bcr_erp_build	0x40049204
	#define	core_config_bcr_erp_build_l	0
	#define	core_config_bcr_erp_build_wd	2
	#define	core_config_bcr_erp_build_c	0
	#define	core_config_bcr_erp_build_mmu	0
	#define	core_config_bcr_erp_build_rf	0
	#define	core_config_bcr_erp_build_pc	0
	#define	core_config_bcr_erp_build_ic	2
	#define	core_config_bcr_erp_build_dc	2
	#define	core_config_bcr_erp_build_ip	2
	#define	core_config_bcr_erp_build_dp	2
	#define	core_config_bcr_erp_build_version	4
	#define	core_config_bcr_fpu_build	0x01004f03
	#define	core_config_bcr_fpu_build_da	1
	#define	core_config_bcr_fpu_build_dd	0
	#define	core_config_bcr_fpu_build_dc	0
	#define	core_config_bcr_fpu_build_df	0
	#define	core_config_bcr_fpu_build_dp	0
	#define	core_config_bcr_fpu_build_fd_v1	2
	#define	core_config_bcr_fpu_build_pi	1
	#define	core_config_bcr_fpu_build_fd	0
	#define	core_config_bcr_fpu_build_fm	0
	#define	core_config_bcr_fpu_build_sd	1
	#define	core_config_bcr_fpu_build_sc	1
	#define	core_config_bcr_fpu_build_sf	1
	#define	core_config_bcr_fpu_build_sp	1
	#define	core_config_bcr_fpu_build_version	3
	#define	core_config_bcr_core_config	0x00000101
	#define	core_config_bcr_core_config_turbo_boost	1
	#define	core_config_bcr_core_config_version	1
	#define	core_config_bcr_irq_build	0x016d7001
	#define	core_config_bcr_irq_build_raz	0
	#define	core_config_bcr_irq_build_nmi	0
	#define	core_config_bcr_irq_build_f	0
	#define	core_config_bcr_irq_build_p	1
	#define	core_config_bcr_irq_build_exts	109
	#define	core_config_bcr_irq_build_irqs	112
	#define	core_config_bcr_irq_build_version	1
	#define	core_config_cir_aux_iccm	0x00100000
	#define	core_config_family	4
	#define	core_config_core_version	3
	#define	core_config_family_name	"arcv2em"
	#define	core_config_rgf_num_banks	1
	#define	core_config_rgf_num_wr_ports	2
	#define	core_config_endian	"little"
	#define	core_config_endian_little	1
	#define	core_config_endian_big	0
	#define	core_config_lpc_size	32
	#define	core_config_pc_size	24
	#define	core_config_addr_size	24
	#define	core_config_code_density	1
	#define	core_config_div_rem	"radix2"
	#define	core_config_div_rem_radix2	1
	#define	core_config_turbo_boost	1
	#define	core_config_swap	1
	#define	core_config_bitscan	1
	#define	core_config_mpy_option	"wlh2"
	#define	core_config_mpy_option_num	3
	#define	core_config_shift_assist	1
	#define	core_config_barrel_shifter	1
	#define	core_config_fpus_div	1
	#define	core_config_fpu_mac	1
	#define	core_config_fpuda	1
	#define	core_config_fpus_mpy_slow	1
	#define	core_config_fpus_div_slow	1
	#define	core_config_timer0	1
	#define	core_config_timer0_level	1
	#define	core_config_timer0_vector	16
	#define	core_config_timer1	1
	#define	core_config_timer1_level	0
	#define	core_config_timer1_vector	17
	#define	core_config_rtc	1
	#define	core_config_mpu_present	1
	#define	core_config_mpu	1
	#define	core_config_mpu_regions	16
	#define	core_config_interrupts_present	1
	#define	core_config_interrupts_number	112
	#define	core_config_interrupts_priorities	2
	#define	core_config_interrupts_externals	109
	#define	core_config_interrupts	112
	#define	core_config_interrupt_priorities	2
	#define	core_config_ext_interrupts	109
	#define	core_config_interrupts_base	0x0
	#define	core_config_dcache_present	1
	#define	core_config_dcache_size	32768
	#define	core_config_dcache_line_size	32
	#define	core_config_dcache_ways	2
	#define	core_config_dcache_feature	2
	#define	core_config_dcache_uncached_region	1
	#define	core_config_icache_present	1
	#define	core_config_icache_size	32768
	#define	core_config_icache_line_size	32
	#define	core_config_icache_ways	2
	#define	core_config_icache_feature	0
	#define	core_config_dccm_present	1
	#define	core_config_dccm_size	0x8000
	#define	core_config_dccm_base	0x00a00000
	#define	core_config_iccm_present	1
	#define	core_config_iccm0_present	1
	#define	core_config_iccm_size	0x8000
	#define	core_config_iccm0_size	0x8000
	#define	core_config_iccm_base	0x00100000
	#define	core_config_iccm0_base	0x00100000
	#define	core_config_error_prot_ver	4
	#define	core_config_iccm0_prot	"ecc"
	#define	core_config_iccm0_prot_level	"data_addr"
	#define	core_config_dccm_prot	"ecc"
	#define	core_config_dccm_prot_level	"data_addr"
	#define	core_config_ic_prot	"ecc"
	#define	core_config_ic_prot_level	"data_addr"
	#define	core_config_dc_prot	"ecc"
	#define	core_config_dc_prot_level	"data_addr"
	#define	core_config_watchdog	1
	#define	core_config_watchdog_size	32
	#define	core_config_clock_speed	200
#endif /* __core_config_h */

]]></string>
  </configuration>
  <configuration name="core" filename="core.props">
    <string><![CDATA[
	core_config.cir.identity=0x00000044
	core_config.cir.identity.chipid=0
	core_config.cir.identity.arcnum=0
	core_config.cir.identity.arcver=68
	core_config.cir.identity.family=4
	core_config.cir.identity.corever=4
	core_config.cir.aux_dccm=0x00a00000
	core_config.bcr.bcr_ver=0x00000002
	core_config.bcr.bcr_ver.version=2
	core_config.bcr.vecbase_ac_build=0x00000010
	core_config.bcr.vecbase_ac_build.version=4
	core_config.bcr.vecbase_ac_build.vector_config=0
	core_config.bcr.vecbase_ac_build.addr=0
	core_config.bcr.mpu_build=0x00001002
	core_config.bcr.mpu_build.i=0
	core_config.bcr.mpu_build.s=0
	core_config.bcr.mpu_build.regions=16
	core_config.bcr.mpu_build.version=2
	core_config.bcr.rf_build=0x00000102
	core_config.bcr.rf_build.version=2
	core_config.bcr.rf_build.p=1
	core_config.bcr.rf_build.e=0
	core_config.bcr.rf_build.r=0
	core_config.bcr.rf_build.b=0
	core_config.bcr.rf_build.d=0
	core_config.bcr.d_cache_build=0x04216104
	core_config.bcr.d_cache_build.version=4
	core_config.bcr.d_cache_build.assoc=1
	core_config.bcr.d_cache_build.capacity=6
	core_config.bcr.d_cache_build.bsize=1
	core_config.bcr.d_cache_build.fl=2
	core_config.bcr.d_cache_build.ioc=0
	core_config.bcr.d_cache_build.cp=0
	core_config.bcr.d_cache_build.u=1
	core_config.bcr.d_cache_build.cycles=0
	core_config.bcr.dccm_build=0x00000704
	core_config.bcr.dccm_build.w=0
	core_config.bcr.dccm_build.cycles=0
	core_config.bcr.dccm_build.interleave=0
	core_config.bcr.dccm_build.size1=0
	core_config.bcr.dccm_build.size0=7
	core_config.bcr.dccm_build.version=4
	core_config.bcr.timer_build=0x00010704
	core_config.bcr.timer_build.sp1=0
	core_config.bcr.timer_build.sp0=0
	core_config.bcr.timer_build.p1=0
	core_config.bcr.timer_build.p0=1
	core_config.bcr.timer_build.st1=0
	core_config.bcr.timer_build.st0=0
	core_config.bcr.timer_build.rtc=1
	core_config.bcr.timer_build.rtsc_ver=1
	core_config.bcr.timer_build.rtsc=0
	core_config.bcr.timer_build.t0=1
	core_config.bcr.timer_build.t1=1
	core_config.bcr.timer_build.version=4
	core_config.bcr.i_cache_build=0x00026104
	core_config.bcr.i_cache_build.assoc=1
	core_config.bcr.i_cache_build.version=4
	core_config.bcr.i_cache_build.capacity=6
	core_config.bcr.i_cache_build.bsize=2
	core_config.bcr.i_cache_build.fl=0
	core_config.bcr.i_cache_build.d=0
	core_config.bcr.iccm_build=0x00000704
	core_config.bcr.iccm_build.w0=0
	core_config.bcr.iccm_build.iccm1_size1=0
	core_config.bcr.iccm_build.iccm0_size1=0
	core_config.bcr.iccm_build.iccm1_size0=0
	core_config.bcr.iccm_build.iccm0_size0=7
	core_config.bcr.iccm_build.version=4
	core_config.bcr.multiply_build=0x00020506
	core_config.bcr.multiply_build.version16x16=2
	core_config.bcr.multiply_build.dsp=0
	core_config.bcr.multiply_build.cyc=1
	core_config.bcr.multiply_build.type=1
	core_config.bcr.multiply_build.version32x32=6
	core_config.bcr.swap_build=0x00000003
	core_config.bcr.swap_build.version=3
	core_config.bcr.norm_build=0x00000003
	core_config.bcr.norm_build.version=3
	core_config.bcr.minmax_build=0x00000002
	core_config.bcr.minmax_build.version=2
	core_config.bcr.barrel_build=0x00000303
	core_config.bcr.barrel_build.version=3
	core_config.bcr.barrel_build.shift_option=3
	core_config.bcr.isa_config=0x12027202
	core_config.bcr.isa_config.res1=0
	core_config.bcr.isa_config.d=1
	core_config.bcr.isa_config.res2=0
	core_config.bcr.isa_config.f=0
	core_config.bcr.isa_config.c=2
	core_config.bcr.isa_config.l=0
	core_config.bcr.isa_config.n=0
	core_config.bcr.isa_config.a=0
	core_config.bcr.isa_config.b=0
	core_config.bcr.isa_config.addr_size=2
	core_config.bcr.isa_config.lpc_size=7
	core_config.bcr.isa_config.pc_size=2
	core_config.bcr.isa_config.version=2
	core_config.bcr.erp_build=0x40049204
	core_config.bcr.erp_build.l=0
	core_config.bcr.erp_build.wd=2
	core_config.bcr.erp_build.c=0
	core_config.bcr.erp_build.mmu=0
	core_config.bcr.erp_build.rf=0
	core_config.bcr.erp_build.pc=0
	core_config.bcr.erp_build.ic=2
	core_config.bcr.erp_build.dc=2
	core_config.bcr.erp_build.ip=2
	core_config.bcr.erp_build.dp=2
	core_config.bcr.erp_build.version=4
	core_config.bcr.fpu_build=0x01004f03
	core_config.bcr.fpu_build.da=1
	core_config.bcr.fpu_build.dd=0
	core_config.bcr.fpu_build.dc=0
	core_config.bcr.fpu_build.df=0
	core_config.bcr.fpu_build.dp=0
	core_config.bcr.fpu_build.fd_v1=2
	core_config.bcr.fpu_build.pi=1
	core_config.bcr.fpu_build.fd=0
	core_config.bcr.fpu_build.fm=0
	core_config.bcr.fpu_build.sd=1
	core_config.bcr.fpu_build.sc=1
	core_config.bcr.fpu_build.sf=1
	core_config.bcr.fpu_build.sp=1
	core_config.bcr.fpu_build.version=3
	core_config.bcr.core_config=0x00000101
	core_config.bcr.core_config.turbo_boost=1
	core_config.bcr.core_config.version=1
	core_config.bcr.irq_build=0x016d7001
	core_config.bcr.irq_build.raz=0
	core_config.bcr.irq_build.nmi=0
	core_config.bcr.irq_build.f=0
	core_config.bcr.irq_build.p=1
	core_config.bcr.irq_build.exts=109
	core_config.bcr.irq_build.irqs=112
	core_config.bcr.irq_build.version=1
	core_config.cir.aux_iccm=0x00100000
	core_config.family=4
	core_config.core_version=3
	core_config.family_name=arcv2em
	core_config.rgf_num_banks=1
	core_config.rgf_num_wr_ports=2
	core_config.endian=little
	core_config.endian_little=1
	core_config.endian_big=0
	core_config.lpc_size=32
	core_config.pc_size=24
	core_config.addr_size=24
	core_config.code_density=1
	core_config.div_rem=radix2
	core_config.div_rem_radix2=1
	core_config.turbo_boost=1
	core_config.swap=1
	core_config.bitscan=1
	core_config.mpy_option=wlh2
	core_config.mpy_option_num=3
	core_config.shift_assist=1
	core_config.barrel_shifter=1
	core_config.fpus_div=1
	core_config.fpu_mac=1
	core_config.fpuda=1
	core_config.fpus_mpy_slow=1
	core_config.fpus_div_slow=1
	core_config.timer0=1
	core_config.timer0_level=1
	core_config.timer0.vector=16
	core_config.timer1=1
	core_config.timer1_level=0
	core_config.timer1.vector=17
	core_config.rtc=1
	core_config.mpu.present=1
	core_config.mpu=1
	core_config.mpu.regions=16
	core_config.interrupts.present=1
	core_config.interrupts.number=112
	core_config.interrupts.priorities=2
	core_config.interrupts.externals=109
	core_config.interrupts=112
	core_config.interrupt_priorities=2
	core_config.ext_interrupts=109
	core_config.interrupts.base=0x0
	core_config.dcache.present=1
	core_config.dcache.size=32768
	core_config.dcache.line_size=32
	core_config.dcache.ways=2
	core_config.dcache_feature=2
	core_config.dcache_uncached_region=1
	core_config.icache.present=1
	core_config.icache.size=32768
	core_config.icache.line_size=32
	core_config.icache.ways=2
	core_config.icache_feature=0
	core_config.dccm.present=1
	core_config.dccm_size=0x8000
	core_config.dccm_base=0x00a00000
	core_config.iccm.present=1
	core_config.iccm0.present=1
	core_config.iccm.size=0x8000
	core_config.iccm0.size=0x8000
	core_config.iccm.base=0x00100000
	core_config.iccm0.base=0x00100000
	core_config.error_prot_ver=4
	core_config.iccm0_prot=ecc
	core_config.iccm0_prot_level=data_addr
	core_config.dccm_prot=ecc
	core_config.dccm_prot_level=data_addr
	core_config.ic_prot=ecc
	core_config.ic_prot_level=data_addr
	core_config.dc_prot=ecc
	core_config.dc_prot_level=data_addr
	core_config.watchdog=1
	core_config.watchdog_size=32
	core_config.clock_speed=200
]]></string>
  </configuration>
  <configuration name="gcc_compiler" filename="gcc.arg">
    <string><![CDATA[
	-mcpu=em4_fpuda
	-mlittle-endian
	-mcode-density
	-mdiv-rem
	-mswap
	-mnorm
	-mmpy-option=3
	-mbarrel-shifter
	-mfpu=fpuda_all
	--param l1-cache-size=32768
	--param l1-cache-line-size=32
]]></string>
  </configuration>
  <configuration name="linker_command_file" filename="link_cmd.txt">
    <string><![CDATA[
# SYSTEM memory regions indicate where external memory might be located.
#   The TCF has no specific knowledge of whether SYSTEM regions contain 
#   external memory or not.
# CCMWRAP memory regions indicate unusable portions of the address space
#   due to CCM memory wrapping into upper addresses beyond its size

MEMORY {
    IVT     : ORIGIN = 0x00000000, LENGTH = 0x00100000
    ICCM0   : ORIGIN = 0x00100000, LENGTH = 0x00008000
#   CCMWRAP0: ORIGIN = 0x00108000, LENGTH = 0x000f8000
#   SYSTEM1 : ORIGIN = 0x00200000, LENGTH = 0x00800000
    DCCM    : ORIGIN = 0x00a00000, LENGTH = 0x00008000
#   CCMWRAP1: ORIGIN = 0x00a08000, LENGTH = 0x000f8000
    SYSTEM2 : ORIGIN = 0x00b00000, LENGTH = 0x00500000
    }
SECTIONS {
    GROUP BLOCK(4): {
	.text? : { *('.text$crt*') }
        * (TEXT): {}
    	* (LIT): {}
	} > ICCM0

    GROUP BLOCK(4): {
	/* _SDA_BASE_ computed implicitly */
        .sdata?: {}
        .sbss?: {}
        * (DATA): {}
        * (BSS): {}
       .stack ALIGN(4) SIZE(DEFINED _STACKSIZE?_STACKSIZE:65536): {}
       .heap? ALIGN(4) SIZE(DEFINED _HEAPSIZE?_HEAPSIZE:0): {}
	} > SYSTEM2
    GROUP BLOCK(4) : {
        .vectors (TEXT) SIZE(DEFINED _IVTSIZE?_IVTSIZE:948): {} = FILL(0xa5a5a5a5,4)
        } > IVT
    }

]]></string>
  </configuration>
  <configuration name="gnu_linker_command_file" filename="memory.x">
    <string><![CDATA[
MEMORY {
    IVT      : ORIGIN = 0x00000000, LENGTH = 0x00100000
    ICCM0    : ORIGIN = 0x00100000, LENGTH = 0x00008000
    CCMWRAP0 : ORIGIN = 0x00108000, LENGTH = 0x000f8000
    SYSTEM1  : ORIGIN = 0x00200000, LENGTH = 0x00800000
    DCCM     : ORIGIN = 0x00a00000, LENGTH = 0x00008000
    CCMWRAP1 : ORIGIN = 0x00a08000, LENGTH = 0x000f8000
    SYSTEM2  : ORIGIN = 0x00b00000, LENGTH = 0x00500000
    }
REGION_ALIAS("startup", ICCM0)
REGION_ALIAS("text", ICCM0)
REGION_ALIAS("data", DCCM)
REGION_ALIAS("sdata", DCCM)
PROVIDE (__stack_top = (0x00a07fff & -4 ));
PROVIDE (__end_heap =  (0x00a07fff ));
]]></string>
  </configuration>
  <configuration name="apex_header" filename="apexextensions.h">
    <string><![CDATA[

/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for apex components 
 */

#ifndef _apexextensions_H_
#define _apexextensions_H_

#define APEX_COM_ARC_HARDWARE_FLOATING_POINT_UNIT_FPU_PRESENT	1

// User extension aux register fpu_build
#define AR_FPU_BUILD 0xc8
#pragma Aux_register(0xc8, name=>"fpu_build")

// User extension aux register fpu_ctrl
#define AR_FPU_CTRL 0x300
#pragma Aux_register(0x300, name=>"fpu_ctrl")

// User extension aux register fpu_status
#define AR_FPU_STATUS 0x301
#pragma Aux_register(0x301, name=>"fpu_status")

// User extension instruction fsmadd
extern int fsmadd(int,int);
#pragma intrinsic(fsmadd,opcode=>6,sub_opcode=>5, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fsmsub
extern int fsmsub(int,int);
#pragma intrinsic(fsmsub,opcode=>6,sub_opcode=>6, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fsmul
extern int fsmul(int,int);
#pragma intrinsic(fsmul,opcode=>6,sub_opcode=>0, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fsadd
extern int fsadd(int,int);
#pragma intrinsic(fsadd,opcode=>6,sub_opcode=>1, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fssub
extern int fssub(int,int);
#pragma intrinsic(fssub,opcode=>6,sub_opcode=>2, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fcvt32
extern int fcvt32(int,int);
#pragma intrinsic(fcvt32,opcode=>6,sub_opcode=>8, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fsdiv
extern int fsdiv(int,int);
#pragma intrinsic(fsdiv,opcode=>6,sub_opcode=>7, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fscmp
extern int fscmp(int,int);
#pragma intrinsic(fscmp,opcode=>6,sub_opcode=>3, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fscmp
extern int fscmp_f(int,int);
#pragma intrinsic(fscmp_f,opcode=>6,sub_opcode=>3, set_flags => 1, flags => "zncv", effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fscmpf
extern int fscmpf(int,int);
#pragma intrinsic(fscmpf,opcode=>6,sub_opcode=>4, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fscmpf
extern int fscmpf_f(int,int);
#pragma intrinsic(fscmpf_f,opcode=>6,sub_opcode=>4, set_flags => 1, flags => "zncv", effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fssqrt
extern int fssqrt(int);
#pragma intrinsic(fssqrt,opcode=>6,sub_opcode=>0, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")
#define APEX_COM_ARC_HARDWARE_FLOATING_POINT_UNIT_FPU_DP_ASSIST_PRESENT	1

// User extension aux register aux_dpfp1l
#define AR_AUX_DPFP1L 0x302
#pragma Aux_register(0x302, name=>"aux_dpfp1l")

// User extension aux register aux_dpfp1h
#define AR_AUX_DPFP1H 0x303
#pragma Aux_register(0x303, name=>"aux_dpfp1h")

// User extension aux register aux_dpfp2l
#define AR_AUX_DPFP2L 0x304
#pragma Aux_register(0x304, name=>"aux_dpfp2l")

// User extension aux register aux_dpfp2h
#define AR_AUX_DPFP2H 0x305
#pragma Aux_register(0x305, name=>"aux_dpfp2h")

// User extension instruction dmulh11
extern int dmulh11(int,int);
#pragma intrinsic(dmulh11,opcode=>6,sub_opcode=>48,blocking_cycles=> 7, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dmulh11
extern int dmulh11_f(int,int);
#pragma intrinsic(dmulh11_f,opcode=>6,sub_opcode=>48, set_flags => 1, flags => "zncv",blocking_cycles=> 7, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dmulh12
extern int dmulh12(int,int);
#pragma intrinsic(dmulh12,opcode=>6,sub_opcode=>49,blocking_cycles=> 7, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dmulh12
extern int dmulh12_f(int,int);
#pragma intrinsic(dmulh12_f,opcode=>6,sub_opcode=>49, set_flags => 1, flags => "zncv",blocking_cycles=> 7, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dmulh21
extern int dmulh21(int,int);
#pragma intrinsic(dmulh21,opcode=>6,sub_opcode=>50,blocking_cycles=> 7, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dmulh21
extern int dmulh21_f(int,int);
#pragma intrinsic(dmulh21_f,opcode=>6,sub_opcode=>50, set_flags => 1, flags => "zncv",blocking_cycles=> 7, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dmulh22
extern int dmulh22(int,int);
#pragma intrinsic(dmulh22,opcode=>6,sub_opcode=>51,blocking_cycles=> 7, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dmulh22
extern int dmulh22_f(int,int);
#pragma intrinsic(dmulh22_f,opcode=>6,sub_opcode=>51, set_flags => 1, flags => "zncv",blocking_cycles=> 7, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction daddh11
extern int daddh11(int,int);
#pragma intrinsic(daddh11,opcode=>6,sub_opcode=>52,blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction daddh11
extern int daddh11_f(int,int);
#pragma intrinsic(daddh11_f,opcode=>6,sub_opcode=>52, set_flags => 1, flags => "zncv",blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction daddh12
extern int daddh12(int,int);
#pragma intrinsic(daddh12,opcode=>6,sub_opcode=>53,blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction daddh12
extern int daddh12_f(int,int);
#pragma intrinsic(daddh12_f,opcode=>6,sub_opcode=>53, set_flags => 1, flags => "zncv",blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction daddh21
extern int daddh21(int,int);
#pragma intrinsic(daddh21,opcode=>6,sub_opcode=>54,blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction daddh21
extern int daddh21_f(int,int);
#pragma intrinsic(daddh21_f,opcode=>6,sub_opcode=>54, set_flags => 1, flags => "zncv",blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction daddh22
extern int daddh22(int,int);
#pragma intrinsic(daddh22,opcode=>6,sub_opcode=>55,blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction daddh22
extern int daddh22_f(int,int);
#pragma intrinsic(daddh22_f,opcode=>6,sub_opcode=>55, set_flags => 1, flags => "zncv",blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dsubh11
extern int dsubh11(int,int);
#pragma intrinsic(dsubh11,opcode=>6,sub_opcode=>56,blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dsubh11
extern int dsubh11_f(int,int);
#pragma intrinsic(dsubh11_f,opcode=>6,sub_opcode=>56, set_flags => 1, flags => "zncv",blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dsubh12
extern int dsubh12(int,int);
#pragma intrinsic(dsubh12,opcode=>6,sub_opcode=>57,blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dsubh12
extern int dsubh12_f(int,int);
#pragma intrinsic(dsubh12_f,opcode=>6,sub_opcode=>57, set_flags => 1, flags => "zncv",blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dsubh21
extern int dsubh21(int,int);
#pragma intrinsic(dsubh21,opcode=>6,sub_opcode=>58,blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dsubh21
extern int dsubh21_f(int,int);
#pragma intrinsic(dsubh21_f,opcode=>6,sub_opcode=>58, set_flags => 1, flags => "zncv",blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dsubh22
extern int dsubh22(int,int);
#pragma intrinsic(dsubh22,opcode=>6,sub_opcode=>59,blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dsubh22
extern int dsubh22_f(int,int);
#pragma intrinsic(dsubh22_f,opcode=>6,sub_opcode=>59, set_flags => 1, flags => "zncv",blocking_cycles=> 5, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dexcl1
extern int dexcl1(int,int);
#pragma intrinsic(dexcl1,opcode=>6,sub_opcode=>60, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")

// User extension instruction dexcl2
extern int dexcl2(int,int);
#pragma intrinsic(dexcl2,opcode=>6,sub_opcode=>61, effects=>"auxreg=0x302:is_read:is_written; auxreg=0x303:is_read:is_written; auxreg=0x304:is_read:is_written; auxreg=0x305:is_read:is_written")


#endif


]]></string>
  </configuration>
  <configuration name="alb_mss_clkctrl_regmap.h" filename="alb_mss_clkctrl_regmap.h">
    <string><![CDATA[
/*************************************************************************/
/**                                                                     **/
/** Copyright (C) 2016-2017 Synopsys, Inc.                              **/
/** All Rights Reserved.                                                **/
/**                                                                     **/
/** This Synopsys software and all associated documentation are         **/
/** proprietary to Synopsys, Inc. and may only be used pursuant to the  **/
/** terms and conditions of a written license agreement with Synopsys,  **/
/** Inc. All other use, reproduction, modification, or distribution of  **/
/** this Synopsys software or the associated documentation is strictly  **/
/** prohibited.                                                         **/
/**                                                                     **/
/*************************************************************************/


/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for Clock control 
 */
#ifndef  _alb_mss_clkctrl_regmap_H_
#define  _alb_mss_clkctrl_regmap_H_
// Use -tcf_include= #include "alb_mss_fab_system_memmap.h"
// Clock control registers
#define MSS_CLKCTRL_CFG_CTRL_ADDR            (MSS_CLKCTRL_0_BASE+0x0)
// clock divider registers
#define MSS_CLKCTRL_CLK_DIV_ADDR      (MSS_CLKCTRL_0_BASE+0x4)
#define MSS_CLKCTRL_MSS_CLK_DIV_ADDR      (MSS_CLKCTRL_0_BASE+0x8)
// clock enable ratio and status registers
// mbus_clk_en: clk <-> mss_clk; design rule: none (clk freq vs. mss_clk freq)
#define MSS_CLKCTRL_MBUS_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0xc)
#define MSS_CLKCTRL_MBUS_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x10)
// mss_fab_mst0_clk_en: mss_clk <-> clk; design rule: none (mss_clk freq vs. clk freq)
#define MSS_CLKCTRL_MSS_FAB_MST0_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x14)
#define MSS_CLKCTRL_MSS_FAB_MST0_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x18)
// mss_fab_mst1_clk_en: mss_clk <-> clk; design rule: none (mss_clk freq vs. clk freq)
#define MSS_CLKCTRL_MSS_FAB_MST1_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x1c)
#define MSS_CLKCTRL_MSS_FAB_MST1_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x20)
// mss_fab_slv0_clk_en: mss_clk <-> mss_clk; design rule: none (mss_clk freq vs. mss_clk freq)
#define MSS_CLKCTRL_MSS_FAB_SLV0_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x24)
#define MSS_CLKCTRL_MSS_FAB_SLV0_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x28)
// mss_fab_slv1_clk_en: mss_clk <-> mss_clk; design rule: none (mss_clk freq vs. mss_clk freq)
#define MSS_CLKCTRL_MSS_FAB_SLV1_CLK_EN_RATIO_ADDR     (MSS_CLKCTRL_0_BASE+0x2c)
#define MSS_CLKCTRL_MSS_FAB_SLV1_CLK_EN_STAT_ADDR      (MSS_CLKCTRL_0_BASE+0x30)

#define MSS_CLKCTRL_NMI_COUNTER              (MSS_CLKCTRL_0_BASE+0x34)
#endif
]]></string>
  </configuration>
  <configuration name="system_memmap" filename="alb_mss_fab_system_memmap.h">
    <string><![CDATA[
/*************************************************************************/
/**                                                                     **/
/** Copyright (C) 2016-2017 Synopsys, Inc.                              **/
/** All Rights Reserved.                                                **/
/**                                                                     **/
/** This Synopsys software and all associated documentation are         **/
/** proprietary to Synopsys, Inc. and may only be used pursuant to the  **/
/** terms and conditions of a written license agreement with Synopsys,  **/
/** Inc. All other use, reproduction, modification, or distribution of  **/
/** this Synopsys software or the associated documentation is strictly  **/
/** prohibited.                                                         **/
/**                                                                     **/
/*************************************************************************/


/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for System Memory
 */
#ifndef  _alb_mss_fab_system_memmap_H_
#define  _alb_mss_fab_system_memmap_H_
// System memory map
#define MSS_CLKCTRL_0_BASE 0xc0000000
#define MSS_CLKCTRL_0_SIZE 0x1000
#define MSS_MEM_0_BASE 0x0000
#define MSS_MEM_0_SIZE 0x100000000

// CCM system address with the specific name

#define HAS_DEFAULT_SLAVE 1
#endif
]]></string>
  </configuration>
  <configuration name="apex_assembly" filename="apexextensions.s">
    <string><![CDATA[

; Assembler directives for eia extensions in this design
.set apex_com_arc_hardware_floating_point_unit_fpu_present,1
.extAuxRegister fpu_build,0xc8,r
.extAuxRegister fpu_ctrl,0x300,r|w
.extAuxRegister fpu_status,0x301,r|w
.extInstruction fsmadd,6,5,SUFFIX_COND,SYNTAX_3OP
.extInstruction fsmsub,6,6,SUFFIX_COND,SYNTAX_3OP
.extInstruction fsmul,6,0,SUFFIX_COND,SYNTAX_3OP
.extInstruction fsadd,6,1,SUFFIX_COND,SYNTAX_3OP
.extInstruction fssub,6,2,SUFFIX_COND,SYNTAX_3OP
.extInstruction fcvt32,6,8,SUFFIX_COND,SYNTAX_3OP
.extInstruction fsdiv,6,7,SUFFIX_COND,SYNTAX_3OP
.extInstruction fscmp,6,3,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction fscmpf,6,4,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction fssqrt,6,0,FLAGS_NONE,SYNTAX_2OP
.set apex_com_arc_hardware_floating_point_unit_fpu_dp_assist_present,1
.extAuxRegister aux_dpfp1l,0x302,r|w
.extAuxRegister aux_dpfp1h,0x303,r|w
.extAuxRegister aux_dpfp2l,0x304,r|w
.extAuxRegister aux_dpfp2h,0x305,r|w
.extInstruction dmulh11,6,48,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction dmulh12,6,49,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction dmulh21,6,50,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction dmulh22,6,51,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction daddh11,6,52,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction daddh12,6,53,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction daddh21,6,54,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction daddh22,6,55,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction dsubh11,6,56,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction dsubh12,6,57,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction dsubh21,6,58,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction dsubh22,6,59,SUFFIX_COND|SUFFIX_FLAG,SYNTAX_3OP
.extInstruction dexcl1,6,60,SUFFIX_COND,SYNTAX_3OP
.extInstruction dexcl2,6,61,SUFFIX_COND,SYNTAX_3OP

]]></string>
  </configuration>
  <configuration name="alb_mss_fab_system_memmap.s" filename="alb_mss_fab_system_memmap.s">
    <string><![CDATA[
// System memory map

.equ MSS_CLKCTRL_0_BASE, 0xc0000000
.equ MSS_CLKCTRL_0_SIZE, 0x1000
.equ MSS_MEM_0_BASE, 0x0000
.equ MSS_MEM_0_SIZE, 0x100000000



.equ UNALLOC_SPACE_NUM,       0

// CCM system address with the specific name

.equ HAS_DEFAULT_SLAVE, 1
]]></string>
  </configuration>
</config_list>

